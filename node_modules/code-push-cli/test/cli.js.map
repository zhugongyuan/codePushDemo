{"version":3,"sources":["test/cli.ts"],"names":["assertJsonDescribesObject","clone","ensureInTestAppDirectory","isDefined","SdkStub","SdkStub.constructor","SdkStub.getAccountInfo","SdkStub.addAccessKey","SdkStub.patchAccessKey","SdkStub.addApp","SdkStub.addCollaborator","SdkStub.addDeployment","SdkStub.clearDeploymentHistory","SdkStub.getAccessKeys","SdkStub.getSessions","SdkStub.getApps","SdkStub.getDeployments","SdkStub.getDeployment","SdkStub.getDeploymentHistory","SdkStub.getDeploymentMetrics","SdkStub.getCollaborators","SdkStub.patchRelease","SdkStub.promote","SdkStub.release","SdkStub.removeAccessKey","SdkStub.removeApp","SdkStub.removeCollaborator","SdkStub.removeDeployment","SdkStub.removeSession","SdkStub.renameApp","SdkStub.rollback","SdkStub.transferApp","SdkStub.renameDeployment","testReleaseCordovaFailure","releaseHelperFunction"],"mappings":"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","file":"cli.js","sourcesContent":["import * as assert from \"assert\";\nimport * as sinon from \"sinon\";\nimport Q = require(\"q\");\nimport * as path from \"path\";\nimport Promise = Q.Promise;\nimport * as codePush from \"code-push/script/types\";\nimport * as cli from \"../definitions/cli\";\nimport * as cmdexec from \"../script/command-executor\";\nimport * as os from \"os\";\n\nfunction assertJsonDescribesObject(json: string, object: Object): void {\n    // Make sure JSON is indented correctly\n    assert.equal(json, JSON.stringify(object, /*replacer=*/ null, /*spacing=*/ 2));\n}\n\nfunction clone<T>(obj: T): T {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nfunction ensureInTestAppDirectory(): void {\n    if (!~__dirname.indexOf(\"/resources/TestApp\")) {\n        process.chdir(__dirname + \"/resources/TestApp\");\n    }\n}\n\nfunction isDefined(object: any): boolean {\n    return object !== undefined && object !== null;\n}\n\nconst NOW = 1471460856191;\nconst DEFAULT_ACCESS_KEY_MAX_AGE = 1000 * 60 * 60 * 24 * 60; // 60 days\nconst TEST_MACHINE_NAME = \"Test machine\";\n\nexport class SdkStub {\n    private productionDeployment: codePush.Deployment = {\n        name: \"Production\",\n        key: \"6\"\n    };\n    private stagingDeployment: codePush.Deployment = {\n        name: \"Staging\",\n        key: \"6\",\n        package: {\n            appVersion: \"1.0.0\",\n            description: \"fgh\",\n            label: \"v2\",\n            packageHash: \"jkl\",\n            isMandatory: true,\n            size: 10,\n            blobUrl: \"http://mno.pqr\",\n            uploadTime: 1000\n        }\n    };\n\n    public getAccountInfo(): Promise<codePush.Account> {\n        return Q(<codePush.Account>{\n            email: \"a@a.com\"\n        });\n    }\n\n    public addAccessKey(name: string, ttl: number): Promise<codePush.AccessKey> {\n        return Q(<codePush.AccessKey>{\n            key: \"key123\",\n            createdTime: new Date().getTime(),\n            name,\n            expires: NOW + (isDefined(ttl) ? ttl : DEFAULT_ACCESS_KEY_MAX_AGE)\n        });\n    }\n\n    public patchAccessKey(oldName: string, newName?: string, newTtl?: number): Promise<codePush.AccessKey> {\n        return Q(<codePush.AccessKey>{\n            createdTime: new Date().getTime(),\n            name: newName,\n            expires: NOW + (isDefined(newTtl) ? newTtl : DEFAULT_ACCESS_KEY_MAX_AGE)\n        });\n    }\n\n    public addApp(name: string, os: string, platform: string, manuallyProvisionDeployments: boolean = false): Promise<codePush.App> {\n        return Q(<codePush.App>{\n            name: name,\n            os: os,\n            platform: platform,\n            manuallyProvisionDeployments: manuallyProvisionDeployments\n        });\n    }\n\n    public addCollaborator(name: string, email: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public addDeployment(appName: string, deploymentName: string): Promise<codePush.Deployment> {\n        return Q(<codePush.Deployment>{\n            name: deploymentName,\n            key: \"6\"\n        });\n    }\n\n    public clearDeploymentHistory(appName: string, deploymentName: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public getAccessKeys(): Promise<codePush.AccessKey[]> {\n        return Q([<codePush.AccessKey>{\n            createdTime: 0,\n            name: \"Test name\",\n            expires: NOW + DEFAULT_ACCESS_KEY_MAX_AGE\n        }]);\n    }\n\n    public getSessions(): Promise<codePush.Session[]> {\n        return Q([<codePush.Session>{\n            loggedInTime: 0,\n            machineName: TEST_MACHINE_NAME\n        }]);\n    }\n\n    public getApps(): Promise<codePush.App[]> {\n        return Q([<codePush.App>{\n            name: \"a\",\n            collaborators: { \"a@a.com\": { permission: \"Owner\", isCurrentAccount: true } },\n            deployments: [ \"Production\", \"Staging\" ]\n        }, <codePush.App>{\n            name: \"b\",\n            collaborators: { \"a@a.com\": { permission: \"Owner\", isCurrentAccount: true } },\n            deployments: [ \"Production\", \"Staging\" ]\n        }]);\n    }\n\n    public getDeployments(appName: string): Promise<codePush.Deployment[]> {\n        if (appName === \"a\") {\n            return Q([this.productionDeployment, this.stagingDeployment]);\n        }\n    \n        return Q.reject<codePush.Deployment[]>();\n    }\n\n    public getDeployment(appName: string, deploymentName: string): Promise<codePush.Deployment> {\n        if (appName === \"a\") {\n            if (deploymentName === \"Production\") {\n                return Q(this.productionDeployment);\n            } else if (deploymentName === \"Staging\") {\n                return Q(this.stagingDeployment);\n            }\n        }\n\n        return Q.reject<codePush.Deployment>();\n    }\n\n    public getDeploymentHistory(appName: string, deploymentName: string): Promise<codePush.Package[]> {\n        return Q([\n            <codePush.Package>{\n                description: null,\n                appVersion: \"1.0.0\",\n                isMandatory: false,\n                packageHash: \"463acc7d06adc9c46233481d87d9e8264b3e9ffe60fe98d721e6974209dc71a0\",\n                blobUrl: \"https://fakeblobstorage.net/storagev2/blobid1\",\n                uploadTime: 1447113596270,\n                size: 1,\n                label: \"v1\"\n            },\n            <codePush.Package>{\n                description: \"New update - this update does a whole bunch of things, including testing linewrapping\",\n                appVersion: \"1.0.1\",\n                isMandatory: false,\n                packageHash: \"463acc7d06adc9c46233481d87d9e8264b3e9ffe60fe98d721e6974209dc71a0\",\n                blobUrl: \"https://fakeblobstorage.net/storagev2/blobid2\",\n                uploadTime: 1447118476669,\n                size: 2,\n                label: \"v2\"\n            }\n        ]);\n    }\n\n    public getDeploymentMetrics(appName: string, deploymentName: string): Promise<any> {\n        return Q({\n            \"1.0.0\": {\n                active: 123\n            },\n            \"v1\": {\n                active: 789,\n                downloaded: 456,\n                failed: 654,\n                installed: 987\n            },\n            \"v2\": {\n                active: 123,\n                downloaded: 321,\n                failed: 789,\n                installed: 456\n            }\n        });\n    }\n\n    public getCollaborators(app: codePush.App): Promise<any> {\n        return Q({\n            \"a@a.com\": {\n                permission: \"Owner\",\n                isCurrentAccount: true\n            },\n            \"b@b.com\": {\n                permission: \"Collaborator\",\n                isCurrentAccount: false\n            }\n        });\n    }\n\n    public patchRelease(appName: string, deployment: string, label: string, updateMetaData: codePush.PackageInfo): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public promote(appName: string, sourceDeployment: string, destinationDeployment: string, updateMetaData: codePush.PackageInfo): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public release(appName: string, deploymentName: string): Promise<string> {\n        return Q(\"Successfully released\");\n    }\n\n    public removeAccessKey(accessKeyId: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public removeApp(appName: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public removeCollaborator(name: string, email: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public removeDeployment(appName: string, deploymentName: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public removeSession(createdBy: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public renameApp(app: codePush.App): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public rollback(appName: string, deployment: string, targetRelease: string): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public transferApp(app: codePush.App): Promise<void> {\n        return Q(<void>null);\n    }\n\n    public renameDeployment(appName: string, deploymentName: codePush.Deployment): Promise<void> {\n        return Q(<void>null);\n    }\n}\n\ndescribe(\"CLI\", () => {\n    var log: Sinon.SinonStub;\n    var sandbox: Sinon.SinonSandbox;\n    var spawn: Sinon.SinonStub;\n    var wasConfirmed = true;\n    const INVALID_RELEASE_FILE_ERROR_MESSAGE: string = \"It is unnecessary to package releases in a .zip or binary file. Please specify the direct path to the update content's directory (e.g. /platforms/ios/www) or file (e.g. main.jsbundle).\";\n\n    beforeEach((): void => {\n        wasConfirmed = true;\n\n        sandbox = sinon.sandbox.create();\n\n        sandbox.stub(cmdexec, \"confirm\", (): Promise<boolean> => Q(wasConfirmed));\n        sandbox.stub(cmdexec, \"createEmptyTempReleaseFolder\", (): Promise<void> => Q(<void>null));\n        log = sandbox.stub(cmdexec, \"log\", (message: string): void => { });\n        spawn = sandbox.stub(cmdexec, \"spawn\", (command: string, commandArgs: string[]): any => {\n            return {\n                stdout: { on: () => { } },\n                stderr: { on: () => { } },\n                on: (event: string, callback: () => void) => {\n                    callback();\n                }\n            };\n        });\n        cmdexec.sdk = <any>new SdkStub();\n    });\n\n    afterEach((): void => {\n        sandbox.restore();\n    });\n\n    it(\"accessKeyAdd creates access key with name and default ttl\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyAddCommand = {\n            type: cli.CommandType.accessKeyAdd,\n            name: \"Test name\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledTwice(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = `Successfully created the \"Test name\" access key: key123`;\n                assert.equal(actual, expected);\n\n                actual = log.args[1][0];\n                expected = \"Make sure to save this key value somewhere safe, since you won't be able to view it from the CLI again!\";\n                assert.equal(actual, expected);\n\n                done();\n            });\n    });\n\n    it(\"accessKeyAdd creates access key with name and specified ttl\", (done: MochaDone): void => {\n        var ttl = 10000;\n        var command: cli.IAccessKeyAddCommand = {\n            type: cli.CommandType.accessKeyAdd,\n            name: \"Test name\",\n            ttl\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledTwice(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = `Successfully created the \"Test name\" access key: key123`;\n                assert.equal(actual, expected);\n\n                actual = log.args[1][0];\n                expected = \"Make sure to save this key value somewhere safe, since you won't be able to view it from the CLI again!\";\n                assert.equal(actual, expected);\n\n                done();\n            });\n    });\n\n    it(\"accessKeyPatch updates access key with new name\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyPatchCommand = {\n            type: cli.CommandType.accessKeyPatch,\n            oldName: \"Test name\",\n            newName: \"Updated name\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = `Successfully renamed the access key \"Test name\" to \"Updated name\".`;\n\n                assert.equal(actual, expected);\n                done();\n            });\n    });\n\n\n    /*\n    it(\"accessKeyPatch updates access key with new ttl\", (done: MochaDone): void => {\n        var ttl = 10000;\n        var command: cli.IAccessKeyPatchCommand = {\n            type: cli.CommandType.accessKeyPatch,\n            oldName: \"Test name\",\n            ttl\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = `Successfully changed the expiration date of the \"Test name\" access key to Wednesday, August 17, 2016 12:07 PM.`;\n\n                assert.equal(actual, expected);\n                done();\n            });\n    });\n\n    it(\"accessKeyPatch updates access key with new name and ttl\", (done: MochaDone): void => {\n        var ttl = 10000;\n        var command: cli.IAccessKeyPatchCommand = {\n            type: cli.CommandType.accessKeyPatch,\n            oldName: \"Test name\",\n            newName: \"Updated name\",\n            ttl\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = `Successfully renamed the access key \"Test name\" to \"Updated name\" and changed its expiration date to Wednesday, August 17, 2016 12:07 PM.`;\n\n                assert.equal(actual, expected);\n                done();\n            });\n    });\n    */\n\n    it(\"accessKeyList lists access key name and expires fields\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyListCommand = {\n            type: cli.CommandType.accessKeyList,\n            format: \"json\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = [\n                    {\n                        createdTime: 0,\n                        name: \"Test name\",\n                        expires: NOW + DEFAULT_ACCESS_KEY_MAX_AGE\n                    }\n                ];\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"accessKeyRemove removes access key\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyRemoveCommand = {\n            type: cli.CommandType.accessKeyRemove,\n            accessKey: \"8\"\n        };\n\n        var removeAccessKey: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeAccessKey\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(removeAccessKey);\n                sinon.assert.calledWithExactly(removeAccessKey, \"8\");\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully removed the \\\"8\\\" access key.\");\n\n                done();\n            });\n    });\n\n    it(\"accessKeyRemove does not remove access key if cancelled\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyRemoveCommand = {\n            type: cli.CommandType.accessKeyRemove,\n            accessKey: \"8\"\n        };\n\n        var removeAccessKey: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeAccessKey\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.notCalled(removeAccessKey);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Access key removal cancelled.\");\n\n                done();\n            });\n    });\n\n    it(\"appAdd reports new app name and ID\", (done: MochaDone): void => {\n        var command: cli.IAppAddCommand = {\n            type: cli.CommandType.appAdd,\n            appName: \"a\",\n            os: \"ios\",\n            platform: \"react-native\"\n        };\n\n        var addApp: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"addApp\");\n        var deploymentList: Sinon.SinonSpy = sandbox.spy(cmdexec, \"deploymentList\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(addApp);\n                sinon.assert.calledTwice(log);\n                sinon.assert.calledWithExactly(log, \"Successfully added the \\\"a\\\" app, along with the following default deployments:\");\n                sinon.assert.calledOnce(deploymentList);\n                done();\n            });\n    });\n\n    it(\"appList lists app names and ID's\", (done: MochaDone): void => {\n        var command: cli.IAppListCommand = {\n            type: cli.CommandType.appList,\n            format: \"json\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = [\n                    {\n                        name: \"a\",\n                        collaborators: {\n                            \"a@a.com\": {\n                                permission: \"Owner\",\n                                isCurrentAccount: true\n                            }\n                        },\n                        deployments: [\"Production\", \"Staging\"]\n                    },\n                    {\n                        name: \"b\",\n                        collaborators: {\n                            \"a@a.com\": {\n                                permission: \"Owner\",\n                                isCurrentAccount: true\n                            }\n                        },\n                        deployments: [\"Production\", \"Staging\"]\n                    }\n                ];\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"appRemove removes app\", (done: MochaDone): void => {\n        var command: cli.IAppRemoveCommand = {\n            type: cli.CommandType.appRemove,\n            appName: \"a\"\n        };\n\n        var removeApp: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeApp\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(removeApp);\n                sinon.assert.calledWithExactly(removeApp, \"a\");\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully removed the \\\"a\\\" app.\");\n\n                done();\n            });\n    });\n\n    it(\"appRemove does not remove app if cancelled\", (done: MochaDone): void => {\n        var command: cli.IAppRemoveCommand = {\n            type: cli.CommandType.appRemove,\n            appName: \"a\"\n        };\n\n        var removeApp: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeApp\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.notCalled(removeApp);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"App removal cancelled.\");\n\n                done();\n            });\n    });\n\n    it(\"appRename renames app\", (done: MochaDone): void => {\n        var command: cli.IAppRenameCommand = {\n            type: cli.CommandType.appRename,\n            currentAppName: \"a\",\n            newAppName: \"c\"\n        };\n\n        var renameApp: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"renameApp\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(renameApp);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully renamed the \\\"a\\\" app to \\\"c\\\".\");\n\n                done();\n            });\n    });\n\n    it(\"appTransfer transfers app\", (done: MochaDone): void => {\n        var command: cli.IAppTransferCommand = {\n            type: cli.CommandType.appTransfer,\n            appName: \"a\",\n            email: \"b@b.com\"\n        };\n\n        var transferApp: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"transferApp\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(transferApp);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully transferred the ownership of app \\\"a\\\" to the account with email \\\"b@b.com\\\".\");\n\n                done();\n            });\n    });\n\n    it(\"collaboratorAdd adds collaborator\", (done: MochaDone): void => {\n        var command: cli.ICollaboratorAddCommand = {\n            type: cli.CommandType.collaboratorAdd,\n            appName: \"a\",\n            email: \"b@b.com\"\n        };\n\n        var addCollaborator: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"addCollaborator\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(addCollaborator);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Collaborator invitation email for \\\"a\\\" sent to \\\"b@b.com\\\".\");\n\n                done();\n            });\n    });\n\n    it(\"collaboratorList lists collaborators email and properties\", (done: MochaDone): void => {\n        var command: cli.ICollaboratorListCommand = {\n            type: cli.CommandType.collaboratorList,\n            appName: \"a\",\n            format: \"json\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = {\n                    \"collaborators\":\n                    {\n                        \"a@a.com\": { permission: \"Owner\", isCurrentAccount: true },\n                        \"b@b.com\": { permission: \"Collaborator\", isCurrentAccount: false }\n                    }\n                };\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"collaboratorRemove removes collaborator\", (done: MochaDone): void => {\n        var command: cli.ICollaboratorRemoveCommand = {\n            type: cli.CommandType.collaboratorRemove,\n            appName: \"a\",\n            email: \"b@b.com\"\n        };\n\n        var removeCollaborator: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeCollaborator\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(removeCollaborator);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully removed \\\"b@b.com\\\" as a collaborator from the app \\\"a\\\".\");\n\n                done();\n            });\n    });\n\n\n    it(\"deploymentAdd reports new app name and ID\", (done: MochaDone): void => {\n        var command: cli.IDeploymentAddCommand = {\n            type: cli.CommandType.deploymentAdd,\n            appName: \"a\",\n            deploymentName: \"b\",\n            default: false\n        };\n\n        var addDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"addDeployment\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(addDeployment);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully added the \\\"b\\\" deployment with key \\\"6\\\" to the \\\"a\\\" app.\");\n                done();\n            });\n    });\n\n    it(\"deploymentHistoryClear clears deployment\", (done: MochaDone): void => {\n        var command: cli.IDeploymentHistoryClearCommand = {\n            type: cli.CommandType.deploymentHistoryClear,\n            appName: \"a\",\n            deploymentName: \"Staging\"\n        };\n\n        var clearDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"clearDeploymentHistory\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(clearDeployment);\n                sinon.assert.calledWithExactly(clearDeployment, \"a\", \"Staging\");\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully cleared the release history associated with the \\\"Staging\\\" deployment from the \\\"a\\\" app.\");\n\n                done();\n            });\n    });\n\n    it(\"deploymentHistoryClear does not clear deployment if cancelled\", (done: MochaDone): void => {\n        var command: cli.IDeploymentHistoryClearCommand = {\n            type: cli.CommandType.deploymentHistoryClear,\n            appName: \"a\",\n            deploymentName: \"Staging\"\n        };\n\n        var clearDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"clearDeploymentHistory\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.notCalled(clearDeployment);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Clear deployment cancelled.\");\n\n                done();\n            });\n    });\n\n    it(\"deploymentList lists deployment names, deployment keys, and package information\", (done: MochaDone): void => {\n        var command: cli.IDeploymentListCommand = {\n            type: cli.CommandType.deploymentList,\n            appName: \"a\",\n            format: \"json\",\n            displayKeys: true\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = [\n                    {\n                        name: \"Production\",\n                        key: \"6\"\n                    },\n                    {\n                        name: \"Staging\",\n                        key: \"6\",\n                        package: {\n                            appVersion: \"1.0.0\",\n                            description: \"fgh\",\n                            label: \"v2\",\n                            packageHash: \"jkl\",\n                            isMandatory: true,\n                            size: 10,\n                            blobUrl: \"http://mno.pqr\",\n                            uploadTime: 1000,\n                            metrics: {\n                                active: 123,\n                                downloaded: 321,\n                                failed: 789,\n                                installed: 456,\n                                totalActive: 1035\n                            }\n                        }\n                    }\n                ];\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"deploymentRemove removes deployment\", (done: MochaDone): void => {\n        var command: cli.IDeploymentRemoveCommand = {\n            type: cli.CommandType.deploymentRemove,\n            appName: \"a\",\n            deploymentName: \"Staging\"\n        };\n\n        var removeDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeDeployment\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(removeDeployment);\n                sinon.assert.calledWithExactly(removeDeployment, \"a\", \"Staging\");\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully removed the \\\"Staging\\\" deployment from the \\\"a\\\" app.\");\n\n                done();\n            });\n    });\n\n    it(\"deploymentRemove does not remove deployment if cancelled\", (done: MochaDone): void => {\n        var command: cli.IDeploymentRemoveCommand = {\n            type: cli.CommandType.deploymentRemove,\n            appName: \"a\",\n            deploymentName: \"Staging\"\n        };\n\n        var removeDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeDeployment\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.notCalled(removeDeployment);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Deployment removal cancelled.\");\n\n                done();\n            });\n    });\n\n    it(\"deploymentRename renames deployment\", (done: MochaDone): void => {\n        var command: cli.IDeploymentRenameCommand = {\n            type: cli.CommandType.deploymentRename,\n            appName: \"a\",\n            currentDeploymentName: \"Staging\",\n            newDeploymentName: \"c\"\n        };\n\n        var renameDeployment: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"renameDeployment\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(renameDeployment);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Successfully renamed the \\\"Staging\\\" deployment to \\\"c\\\" for the \\\"a\\\" app.\");\n\n                done();\n            });\n    });\n\n    it(\"deploymentHistory lists package history information\", (done: MochaDone): void => {\n        var command: cli.IDeploymentHistoryCommand = {\n            type: cli.CommandType.deploymentHistory,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            format: \"json\",\n            displayAuthor: false\n        };\n\n        var getDeploymentHistory: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"getDeploymentHistory\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(getDeploymentHistory);\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected: codePush.Package[] = [\n                    {\n                        description: null,\n                        appVersion: \"1.0.0\",\n                        isMandatory: false,\n                        packageHash: \"463acc7d06adc9c46233481d87d9e8264b3e9ffe60fe98d721e6974209dc71a0\",\n                        blobUrl: \"https://fakeblobstorage.net/storagev2/blobid1\",\n                        uploadTime: 1447113596270,\n                        size: 1,\n                        label: \"v1\",\n                        metrics: {\n                            active: 789,\n                            downloaded: 456,\n                            failed: 654,\n                            installed: 987,\n                            totalActive: 1035\n                        }\n                    },\n                    {\n                        description: \"New update - this update does a whole bunch of things, including testing linewrapping\",\n                        appVersion: \"1.0.1\",\n                        isMandatory: false,\n                        packageHash: \"463acc7d06adc9c46233481d87d9e8264b3e9ffe60fe98d721e6974209dc71a0\",\n                        blobUrl: \"https://fakeblobstorage.net/storagev2/blobid2\",\n                        uploadTime: 1447118476669,\n                        size: 2,\n                        label: \"v2\",\n                        metrics: {\n                            active: 123,\n                            downloaded: 321,\n                            failed: 789,\n                            installed: 456,\n                            totalActive: 1035\n                        }\n                    }\n                ];\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"patch command successfully updates specific label\", (done: MochaDone): void => {\n        var command: cli.IPatchCommand = {\n            type: cli.CommandType.patch,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            label: \"v1\",\n            disabled: false,\n            description: \"Patched\",\n            mandatory: true,\n            rollout: 25,\n            appStoreVersion: \"1.0.1\"\n        };\n\n        var patch: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"patchRelease\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(patch);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully updated the \"v1\" release of \"a\" app's \"Staging\" deployment.`);\n\n                done();\n            });\n    });\n\n    it(\"patch command successfully updates latest release\", (done: MochaDone): void => {\n        var command: cli.IPatchCommand = {\n            type: cli.CommandType.patch,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            label: null,\n            disabled: false,\n            description: \"Patched\",\n            mandatory: true,\n            rollout: 25,\n            appStoreVersion: \"1.0.1\"\n        };\n\n        var patch: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"patchRelease\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(patch);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully updated the \"latest\" release of \"a\" app's \"Staging\" deployment.`);\n\n                done();\n            });\n    });\n\n    it(\"patch command successfully updates without appStoreVersion\", (done: MochaDone): void => {\n        var command: cli.IPatchCommand = {\n            type: cli.CommandType.patch,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            label: null,\n            disabled: false,\n            description: \"Patched\",\n            mandatory: true,\n            rollout: 25,\n            appStoreVersion: null\n        };\n\n        var patch: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"patchRelease\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(patch);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully updated the \"latest\" release of \"a\" app's \"Staging\" deployment.`);\n\n                done();\n            });\n    });\n\n    it(\"patch command fails if no properties were specified for update\", (done: MochaDone): void => {\n        var command: cli.IPatchCommand = {\n            type: cli.CommandType.patch,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            label: null,\n            disabled: null,\n            description: null,\n            mandatory: null,\n            rollout: null,\n            appStoreVersion: null\n        };\n\n        var patch: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"patchRelease\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"At least one property must be specified to patch a release.\");\n                sinon.assert.notCalled(patch);\n                done();\n            })\n            .done();\n    });\n\n    it(\"promote works successfully\", (done: MochaDone): void => {\n        var command: cli.IPromoteCommand = {\n            type: cli.CommandType.promote,\n            appName: \"a\",\n            sourceDeploymentName: \"Staging\",\n            destDeploymentName: \"Production\",\n            description: \"Promoted\",\n            mandatory: true,\n            rollout: 25,\n            appStoreVersion: \"1.0.1\"\n        };\n\n        var promote: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"promote\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(promote);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully promoted the \"Staging\" deployment of the \"a\" app to the \"Production\" deployment.`);\n\n                done();\n            });\n    });\n\n    it(\"promote works successfully without appStoreVersion\", (done: MochaDone): void => {\n        var command: cli.IPromoteCommand = {\n            type: cli.CommandType.promote,\n            appName: \"a\",\n            sourceDeploymentName: \"Staging\",\n            destDeploymentName: \"Production\",\n            description: \"Promoted\",\n            mandatory: true,\n            rollout: 25,\n            appStoreVersion: null\n        };\n\n        var promote: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"promote\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(promote);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully promoted the \"Staging\" deployment of the \"a\" app to the \"Production\" deployment.`);\n\n                done();\n            });\n    });\n\n    it(\"rollback works successfully\", (done: MochaDone): void => {\n        var command: cli.IRollbackCommand = {\n            type: cli.CommandType.rollback,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            targetRelease: \"v2\"\n        };\n\n        var rollback: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"rollback\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(rollback);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully performed a rollback on the \"Staging\" deployment of the \"a\" app.`);\n\n                done();\n            });\n    });\n\n    it(\"release doesn't allow non valid semver ranges\", (done: MochaDone): void => {\n        var command: cli.IReleaseCommand = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            description: \"test releasing zip file\",\n            mandatory: false,\n            rollout: null,\n            appStoreVersion: \"not semver\",\n            package: \"./resources\"\n        };\n\n        releaseHelperFunction(command, done, \"Please use a semver-compliant target binary version range, for example \\\"1.0.0\\\", \\\"*\\\" or \\\"^1.2.3\\\".\");\n    });\n\n    it(\"release doesn't allow releasing .zip file\", (done: MochaDone): void => {\n        var command: cli.IReleaseCommand = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            description: \"test releasing zip file\",\n            mandatory: false,\n            rollout: null,\n            appStoreVersion: \"1.0.0\",\n            package: \"/fake/path/test/file.zip\"\n        };\n\n        releaseHelperFunction(command, done, INVALID_RELEASE_FILE_ERROR_MESSAGE);\n    });\n\n    it(\"release doesn't allow releasing .ipa file\", (done: MochaDone): void => {\n        var command: cli.IReleaseCommand = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            description: \"test releasing ipa file\",\n            mandatory: false,\n            rollout: null,\n            appStoreVersion: \"1.0.0\",\n            package: \"/fake/path/test/file.ipa\"\n        };\n\n        releaseHelperFunction(command, done, INVALID_RELEASE_FILE_ERROR_MESSAGE);\n    });\n\n    it(\"release doesn't allow releasing .apk file\", (done: MochaDone): void => {\n        var command: cli.IReleaseCommand = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            deploymentName: \"Staging\",\n            description: \"test releasing apk file\",\n            mandatory: false,\n            rollout: null,\n            appStoreVersion: \"1.0.0\",\n            package: \"/fake/path/test/file.apk\"\n        };\n\n        releaseHelperFunction(command, done, INVALID_RELEASE_FILE_ERROR_MESSAGE);\n    });\n\n    it(\"release-cordova fails if Cordova project cannot be prepared\", (done: MochaDone): void => {\n        testReleaseCordovaFailure(/*build*/ false, done);\n    });\n\n    it(\"release-cordova fails if Cordova project cannot be built\", (done: MochaDone): void => {\n        testReleaseCordovaFailure(/*build*/ true, done);\n    });\n\n    function testReleaseCordovaFailure(build: boolean, done: MochaDone): void {\n        var command: cli.IReleaseCordovaCommand = {\n            type: cli.CommandType.releaseCordova,\n            appName: \"a\",\n            appStoreVersion: null,\n            build: build,\n            deploymentName: \"Staging\",\n            description: \"Test invalid project\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        var cordovaCommand: string = build ? \"build\" : \"prepare\";\n        var execSync: Sinon.SinonStub = sandbox.stub(cmdexec, \"execSync\", (command: string, options: any) => { throw `Failed ${cordovaCommand}`; });\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseCordova: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseCordova\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, `Unable to ${cordovaCommand} project. Please ensure that the CWD represents a Cordova project and that the \"${command.platform}\" platform was added by running \"cordova platform add ${command.platform}\".`);\n                sinon.assert.notCalled(release);\n                done();\n            })\n            .done();\n    }\n\n    it(\"release-cordova fails if CWD does not contain config.xml\", (done: MochaDone): void => {\n        var command: cli.IReleaseCordovaCommand = {\n            type: cli.CommandType.releaseCordova,\n            appName: \"a\",\n            appStoreVersion: null,\n            build: false,\n            deploymentName: \"Staging\",\n            description: \"Test missing config.xml\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        var execSync: Sinon.SinonStub = sandbox.stub(cmdexec, \"execSync\", (command: string, options: any) => { });\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseCordova: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseCordova\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, `Unable to find or read \"config.xml\" in the CWD. The \"release-cordova\" command must be executed in a Cordova project folder.`);\n                sinon.assert.notCalled(release);\n                sinon.assert.calledOnce(execSync);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-cordova fails if platform is invalid\", (done: MochaDone): void => {\n        var command: cli.IReleaseCordovaCommand = {\n            type: cli.CommandType.releaseCordova,\n            appName: \"a\",\n            appStoreVersion: null,\n            build: false,\n            deploymentName: \"Staging\",\n            description: \"Test invalid platform\",\n            mandatory: false,\n            rollout: null,\n            platform: \"blackberry\",\n        };\n\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseCordova: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseCordova\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"Platform must be either \\\"ios\\\" or \\\"android\\\".\");\n                sinon.assert.notCalled(release);\n                sinon.assert.notCalled(spawn);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-cordova defaults appStoreVersion to value pulled from config.xml\", (done: MochaDone): void => {\n        var command: cli.IReleaseCordovaCommand = {\n            type: cli.CommandType.releaseCordova,\n            appName: \"a\",\n            appStoreVersion: null,\n            build: false,\n            deploymentName: \"Staging\",\n            description: \"Test config.xml app version read\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        var oldWd: string = process.cwd();\n        ensureInTestAppDirectory();\n\n        var expectedReleaseCommand: any = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            appStoreVersion: \"0.0.1\",\n            build: false,\n            deploymentName: \"Staging\",\n            description: \"Test config.xml app version read\",\n            mandatory: false,\n            rollout: null,\n            package: path.join(process.cwd(), \"platforms\", \"ios\", \"www\"),\n            platform: \"ios\"\n        }\n\n        var execSync: Sinon.SinonStub = sandbox.stub(cmdexec, \"execSync\", (command: string, options: any) => { });\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\");\n        var releaseCordova: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseCordova\");\n\n        cmdexec.execute(command)\n            .then((compiledReleaseCommand: any) => {\n                sinon.assert.calledOnce(execSync);\n                sinon.assert.calledWith(release, expectedReleaseCommand);\n                done();\n            })\n            .catch((err) => {\n                done(new Error(\"Threw error. \" + err.message));\n            })\n            .done(() => {\n                process.chdir(oldWd);\n            });\n    });\n\n    it(\"release-cordova points 'package' to the built folder for android\", (done: MochaDone): void => {\n        var command: cli.IReleaseCordovaCommand = {\n            type: cli.CommandType.releaseCordova,\n            appName: \"a\",\n            appStoreVersion: null,\n            build: true,\n            deploymentName: \"Staging\",\n            description: \"Test android package resolution\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\"\n        };\n\n        var oldWd: string = process.cwd();\n        ensureInTestAppDirectory();\n\n        var expectedReleaseCommand: any = {\n            type: cli.CommandType.release,\n            appName: \"a\",\n            appStoreVersion: \"0.0.1\",\n            build: true,\n            deploymentName: \"Staging\",\n            description: \"Test android package resolution\",\n            mandatory: false,\n            rollout: null,\n            package: path.join(process.cwd(), \"platforms\", \"android\", \"assets\", \"www\"),\n            platform: \"android\"\n        }\n\n        var execSync: Sinon.SinonStub = sandbox.stub(cmdexec, \"execSync\", (command: string, options: any) => { });\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\");\n        var releaseCordova: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseCordova\");\n\n        cmdexec.execute(command)\n            .then((compiledReleaseCommand: any) => {\n                sinon.assert.calledOnce(execSync);\n                sinon.assert.calledWith(release, expectedReleaseCommand);\n                done();\n            })\n            .catch((err) => {\n                done(new Error(\"Threw error. \" + err.message));\n            })\n            .done(() => {\n                process.chdir(oldWd);\n            });\n    });\n\n    it(\"release-react fails if CWD does not contain package.json\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test invalid folder\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseReact: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseReact\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"Unable to find or read \\\"package.json\\\" in the CWD. The \\\"release-react\\\" command must be executed in a React Native project folder.\");\n                sinon.assert.notCalled(release);\n                sinon.assert.notCalled(spawn);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react fails if entryFile does not exist\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test invalid entryFile\",\n            entryFile: \"doesntexist.js\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseReact: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseReact\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"Entry file \\\"doesntexist.js\\\" does not exist.\");\n                sinon.assert.notCalled(release);\n                sinon.assert.notCalled(spawn);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react fails if platform is invalid\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test invalid platform\",\n            mandatory: false,\n            rollout: null,\n            platform: \"blackberry\",\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec, \"release\");\n        var releaseReact: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseReact\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"Platform must be \\\"android\\\", \\\"ios\\\", or \\\"windows\\\".\");\n                sinon.assert.notCalled(release);\n                sinon.assert.notCalled(spawn);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react fails if targetBinaryRange is not a valid semver range expression\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: \"notsemver\",\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test uses targetBinaryRange\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\",\n            sourcemapOutput: \"index.android.js.map\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n        var releaseReact: Sinon.SinonSpy = sandbox.spy(cmdexec, \"releaseReact\");\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                assert.equal(err.message, \"Please use a semver-compliant target binary version range, for example \\\"1.0.0\\\", \\\"*\\\" or \\\"^1.2.3\\\".\");\n                sinon.assert.notCalled(release);\n                sinon.assert.notCalled(spawn);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react defaults entry file to index.{platform}.js if not provided\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test default entry file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush/CodePush\");\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev false --entry-file index.ios.js --platform ios`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react defaults bundle name to \\\"main.jsbundle\\\" if not provided and platform is \\\"ios\\\"\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test default entry file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>clone(command);\n                var packagePath: string = path.join(os.tmpdir(), \"CodePush/CodePush\");\n                releaseCommand.package = packagePath;\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${packagePath} --bundle-output ${path.join(packagePath, \"main.jsbundle\")} --dev false --entry-file index.ios.js --platform ios`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react defaults bundle name to \\\"index.android.bundle\\\" if not provided and platform is \\\"android\\\"\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test default entry file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>clone(command);\n                var packagePath: string = path.join(os.tmpdir(), \"CodePush/CodePush\");\n                releaseCommand.package = packagePath;\n                releaseCommand.appStoreVersion = \"1.0.0\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${packagePath} --bundle-output ${path.join(packagePath, \"index.android.bundle\")} --dev false --entry-file index.android.js --platform android`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react defaults bundle name to \\\"index.windows.bundle\\\" if not provided and platform is \\\"windows\\\"\", (done: MochaDone): void => {\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            deploymentName: \"Staging\",\n            description: \"Test default entry file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"windows\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>clone(command);\n                var packagePath = path.join(os.tmpdir(), \"CodePush/CodePush\");\n                releaseCommand.package = packagePath;\n                releaseCommand.appStoreVersion = \"1.0.0\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${packagePath} --bundle-output ${path.join(packagePath, \"index.windows.bundle\")} --dev false --entry-file index.windows.js --platform windows`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react generates dev bundle\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            development: true,\n            description: \"Test generates dev bundle\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\",\n            sourcemapOutput: \"index.android.js.map\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush\");\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev true --entry-file index.android.js --platform android --sourcemap-output index.android.js.map`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react generates sourcemaps\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test generates sourcemaps\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\",\n            sourcemapOutput: \"index.android.js.map\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush\");\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev false --entry-file index.android.js --platform android --sourcemap-output index.android.js.map`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react uses specified targetBinaryRange option\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: \">=1.0.0 <1.0.5\",\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test uses targetBinaryRange\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\",\n            sourcemapOutput: \"index.android.js.map\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush\");\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev false --entry-file index.android.js --platform android --sourcemap-output index.android.js.map`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react applies arguments to node binary provided via the CODE_PUSH_NODE_ARGS env var\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test default entry file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"ios\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        var _CODE_PUSH_NODE_ARGS: string = process.env.CODE_PUSH_NODE_ARGS;\n        process.env.CODE_PUSH_NODE_ARGS = \"  --foo=bar    --baz  \";\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush\");\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `--foo=bar --baz ${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev false --entry-file index.ios.js --platform ios`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n\n                _CODE_PUSH_NODE_ARGS !== undefined ? process.env.CODE_PUSH_NODE_ARGS = _CODE_PUSH_NODE_ARGS : delete process.env.CODE_PUSH_NODE_ARGS;\n\n                done();\n            })\n            .done();\n    });\n\n    it(\"release-react uses config file\", (done: MochaDone): void => {\n        var bundleName = \"bundle.js\";\n        var command: cli.IReleaseReactCommand = {\n            type: cli.CommandType.releaseReact,\n            appName: \"a\",\n            appStoreVersion: null,\n            bundleName: bundleName,\n            deploymentName: \"Staging\",\n            description: \"Test uses config file\",\n            mandatory: false,\n            rollout: null,\n            platform: \"android\",\n            config: \"/path/to/config.json\"\n        };\n\n        ensureInTestAppDirectory();\n\n        var release: Sinon.SinonSpy = sandbox.stub(cmdexec, \"release\", () => { return Q(<void>null) });\n\n        cmdexec.execute(command)\n            .then(() => {\n                var releaseCommand: cli.IReleaseCommand = <any>command;\n                releaseCommand.package = path.join(os.tmpdir(), \"CodePush\");\n                releaseCommand.appStoreVersion = \"1.2.3\";\n\n                sinon.assert.calledOnce(spawn);\n                var spawnCommand: string = spawn.args[0][0];\n                var spawnCommandArgs: string = spawn.args[0][1].join(\" \");\n                assert.equal(spawnCommand, \"node\");\n                assert.equal(\n                    spawnCommandArgs,\n                    `${path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\")} bundle --assets-dest ${path.join(os.tmpdir(), \"CodePush/CodePush\")} --bundle-output ${path.join(os.tmpdir(), \"CodePush/CodePush\", bundleName)} --dev false --entry-file index.android.js --platform android --config /path/to/config.json`\n                );\n                assertJsonDescribesObject(JSON.stringify(release.args[0][0], /*replacer=*/ null, /*spacing=*/ 2), releaseCommand);\n                done();\n            })\n            .done();\n    });\n\n    it(\"sessionList lists session name and expires fields\", (done: MochaDone): void => {\n        var command: cli.IAccessKeyListCommand = {\n            type: cli.CommandType.sessionList,\n            format: \"json\"\n        };\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(log);\n                assert.equal(log.args[0].length, 1);\n\n                var actual: string = log.args[0][0];\n                var expected = [\n                    {\n                        loggedInTime: 0,\n                        machineName: TEST_MACHINE_NAME,\n                    }\n                ];\n\n                assertJsonDescribesObject(actual, expected);\n                done();\n            });\n    });\n\n    it(\"sessionRemove removes session\", (done: MochaDone): void => {\n        var machineName = TEST_MACHINE_NAME;\n        var command: cli.ISessionRemoveCommand = {\n            type: cli.CommandType.sessionRemove,\n            machineName: machineName\n        };\n\n        var removeSession: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeSession\");\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.calledOnce(removeSession);\n                sinon.assert.calledWithExactly(removeSession, machineName);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, `Successfully removed the login session for \"${machineName}\".`);\n\n                done();\n            });\n    });\n\n    it(\"sessionRemove does not remove session if cancelled\", (done: MochaDone): void => {\n        var machineName = TEST_MACHINE_NAME;\n        var command: cli.ISessionRemoveCommand = {\n            type: cli.CommandType.sessionRemove,\n            machineName: machineName\n        };\n\n        var removeSession: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeSession\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .done((): void => {\n                sinon.assert.notCalled(removeSession);\n                sinon.assert.calledOnce(log);\n                sinon.assert.calledWithExactly(log, \"Session removal cancelled.\");\n\n                done();\n            });\n    });\n\n    it(\"sessionRemove does not remove current session\", (done: MochaDone): void => {\n        var machineName = os.hostname();\n        var command: cli.ISessionRemoveCommand = {\n            type: cli.CommandType.sessionRemove,\n            machineName: machineName\n        };\n\n        var removeSession: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"removeSession\");\n\n        wasConfirmed = false;\n\n        cmdexec.execute(command)\n            .then(() => {\n                done(new Error(\"Did not throw error.\"));\n            })\n            .catch((err) => {\n                done();\n            })\n            .done();\n    });\n\n    function releaseHelperFunction(command: cli.IReleaseCommand, done: MochaDone, expectedError: string): void {\n        var release: Sinon.SinonSpy = sandbox.spy(cmdexec.sdk, \"release\");\n        cmdexec.execute(command)\n            .done((): void => {\n                throw \"Error Expected\";\n            }, (error: any): void => {\n                assert(!!error);\n                assert.equal(error.message, expectedError);\n                done();\n            });\n    }\n});"],"sourceRoot":"../.."}