{"version":3,"sources":["script/command-executor.ts"],"names":["accessKeyAdd","accessKeyPatch","accessKeyList","accessKeyRemove","appAdd","appList","appRemove","appRename","appTransfer","addCollaborator","listCollaborators","removeCollaborator","deleteConnectionInfoCache","deleteFolder","deploymentAdd","deploymentHistoryClear","deploymentRemove","deploymentRename","deploymentHistory","deserializeConnectionInfo","execute","fileDoesNotExistOrIsDirectory","getTotalActiveFromDeploymentMetrics","initiateExternalAuthenticationAsync","link","login","loginWithExternalAuthentication","logout","formatDate","printAppList","getCollaboratorDisplayName","printCollaboratorsList","printDeploymentList","printDeploymentHistory","applyChalkSkippingLineBreaks","getPackageString","getPackageMetricsString","getReactNativeProjectAppVersion","printJson","printAccessKeys","printAccessKeys.isExpired","printAccessKeys.keyToTableRow","printSessions","printTable","register","promote","patch","validateDeployment","rollback","requestAccessKey","serializeConnectionInfo","sessionList","sessionRemove","releaseErrorHandler","isBinaryOrZip","throwForInvalidEmail","throwForInvalidSemverRange","throwForInvalidOutputFormat","whoami","getProxy","isCommandOptionSpecified","getSdk"],"mappings":"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A,CAACA,KAAKA,EAAEA,OAAOA,CAACA,CAACA,CAACA;QAE1EA,MAAMA,CAACA,WAAGA,CAACA,eAAeA,EAAEA;aACvBA,IAAIA,CAACA,UAACA,eAAwBA;YAC3BA,EAAEA,CAACA,CAACA,eAAeA,CAACA,CAACA,CAACA;gBAClBA,uBAAuBA,CAACA,SAASA,EAAgCA,KAAKA,EAAEA,SAASA,EAAEA,KAAKA,EAAEA,OAAOA,CAACA,CAACA;YACvGA,CAACA;YAACA,IAAIA,CAACA,CAACA;gBACJA,MAAMA,IAAIA,KAAKA,CAACA,gBAAgBA,CAACA,CAACA;YACtCA,CAACA;QACLA,CAACA,CAACA,CAACA;IACXA,CAACA,CAACA,CAACA;AACXA,CAACA;AAED,gBAAgB,OAAqB;IACjCC,MAAMA,CAACA,CAACA,CAAOA,IAAIA,CAACA;SACfA,IAAIA,CAACA;QACFA,EAAEA,CAACA,CAACA,CAACA,cAAcA,CAACA,yBAAyBA,CAACA,CAACA,CAACA;YAC5CA,IAAIA,WAAWA,GAAWA,EAAEA,CAACA,QAAQA,EAAEA,CAACA;YACxCA,MAAMA,CAACA,WAAGA,CAACA,aAAaA,CAACA,WAAWA,CAACA;iBAChCA,KAAKA,CAACA,UAACA,KAAoBA;gBACxBA,AACAA,oHADoHA;gBACpHA,EAAEA,CAACA,CAACA,KAAKA,CAACA,UAAUA,KAAKA,cAAcA,CAACA,kBAAkBA,IAAIA,KAAKA,CAACA,UAAUA,KAAKA,cAAcA,CAACA,eAAeA,CAACA,CAACA,CAACA;oBAChHA,MAAMA,KAAKA,CAACA;gBAChBA,CAACA;YACLA,CAACA,CAACA,CAACA;QACXA,CAACA;IACLA,CAACA,CAACA;SACDA,IAAIA,CAACA;QACFA,WAAGA,GAAGA,IAAIA,CAACA;QACXA,yBAAyBA,EAAEA,CAACA;IAChCA,CAACA,CAACA,CAACA;AACXA,CAACA;AAED,oBAAoB,UAAkB;IAClCC,IAAIA,IAAIA,GAAkBA,MAAMA,CAACA,UAAUA,CAACA,CAACA;IAC7CA,IAAIA,GAAGA,GAAkBA,MAAMA,EAAEA,CAACA;IAClCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,MAAMA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,CAACA;QACxCA,MAAMA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,EAAmBA,gBAAgBA;IAC5DA,CAACA,GADyBA;IACxBA,IAAIA,CAACA,EAAEA,CAACA,CAACA,GAAGA,CAACA,IAAIA,EAAEA,KAAKA,IAAIA,CAACA,IAAIA,EAAEA,CAACA,CAACA,CAACA;QACpCA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,OAAOA,CAACA,EAAaA,UAAUA;IACtDA,CAACA,GAD+BA;IAC9BA,IAAIA,CAACA,CAACA;QACJA,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,aAAaA,CAACA,EAAOA,gBAAgBA;IAC5DA,CAACA,GADqCA;AAE1CA,CAACA;AAED,sBAAsB,MAAc,EAAE,IAAW;IAC7CC,EAAEA,CAACA,CAACA,MAAMA,KAAKA,MAAMA,CAACA,CAACA,CAACA;QACpBA,SAASA,CAACA,IAAIA,CAACA,CAACA;IACpBA,CAACA;IAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,MAAMA,KAAKA,OAAOA,CAACA,CAACA,CAACA;QAC5BA,IAAIA,OAAOA,GAAGA,CAACA,MAAMA,EAAEA,aAAaA,CAACA,CAACA;QACtCA,UAAUA,CAACA,OAAOA,EAAEA,UAACA,UAAiBA;YAClCA,IAAIA,CAACA,OAAOA,CAACA,UAACA,GAAQA,EAAEA,KAAaA;gBACjCA,IAAIA,GAAGA,GAAGA,CAACA,GAAGA,CAACA,IAAIA,EAAEA,QAAQA,CAACA,EAAEA,CAACA,CAACA,GAAGA,CAACA,WAAWA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;gBAC/DA,UAAUA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;YACzBA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IACPA,CAACA;AACLA,CAACA;AAED,oCAAoC,KAAa,EAAE,sBAA8C;IAC7FC,MAAMA,CAACA,CAACA,sBAAsBA,CAACA,UAAUA,KAAKA,cAAcA,CAACA,aAAaA,CAACA,KAAKA,CAACA,GAAGA,KAAKA,GAAGA,KAAKA,CAACA,OAAOA,CAACA,UAAUA,CAACA,GAAGA,KAAKA,CAACA;AAClIA,CAACA;AAED,gCAAgC,MAAc,EAAE,aAA8B;IAC1EC,EAAEA,CAACA,CAACA,MAAMA,KAAKA,MAAMA,CAACA,CAACA,CAACA;QACpBA,IAAIA,UAAUA,GAAGA,EAAEA,eAAeA,EAAEA,aAAaA,EAAEA,CAACA;QACpDA,SAASA,CAACA,UAAUA,CAACA,CAACA;IAC1BA,CAACA;IAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,MAAMA,KAAKA,OAAOA,CAACA,CAACA,CAACA;QAC5BA,IAAIA,OAAOA,GAAGA,CAACA,gBAAgBA,CAACA,CAACA;QACjCA,UAAUA,CAACA,OAAOA,EAAEA,UAACA,UAAiBA;YAClCA,MAAMA,CAACA,IAAIA,CAACA,aAAaA,CAACA,CAACA,OAAOA,CAACA,UAACA,KAAaA;gBAC7CA,IAAIA,GAAGA,GAAGA,CAACA,0BAA0BA,CAACA,KAAKA,EAAEA,aAAaA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;gBACpEA,UAAUA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;YACzBA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IACPA,CAACA;AACLA,CAACA;AAED,6BAA6B,OAAmC,EAAE,WAAyB,EAAE,WAA2B;IAA3BC,2BAA2BA,GAA3BA,kBAA2BA;IACpHA,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,MAAMA,CAACA,CAACA,CAACA;QAC5BA,SAASA,CAACA,WAAWA,CAACA,CAACA;IAC3BA,CAACA;IAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,OAAOA,CAACA,CAACA,CAACA;QACpCA,IAAIA,OAAOA,GAAGA,CAACA,MAAMA,CAACA,CAACA;QACvBA,EAAEA,CAACA,CAACA,OAAOA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACtBA,OAAOA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,CAACA;QACnCA,CAACA;QAEDA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA;YACdA,OAAOA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA;YAChCA,OAAOA,CAACA,IAAIA,CAACA,iBAAiBA,CAACA,CAACA;QACpCA,CAACA;QAEDA,UAAUA,CAACA,OAAOA,EAAEA,UAACA,UAAiBA;YAClCA,WAAWA,CAACA,OAAOA,CAACA,UAACA,UAAsBA;gBACvCA,IAAIA,GAAGA,GAAGA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;gBAC5BA,EAAEA,CAACA,CAACA,OAAOA,CAACA,WAAWA,CAACA,CAACA,CAACA;oBACtBA,GAAGA,CAACA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,CAACA;gBAC7BA,CAACA;gBAEDA,EAAEA,CAACA,CAACA,WAAWA,CAACA,CAACA,CAACA;oBACdA,GAAGA,CAACA,IAAIA,CAACA,gBAAgBA,CAACA,UAAUA,CAACA,OAAOA,CAACA,CAACA,CAACA;oBAC/CA,GAAGA,CAACA,IAAIA,CAACA,uBAAuBA,CAACA,UAAUA,CAACA,OAAOA,CAACA,CAACA,CAACA;gBAC1DA,CAACA;gBAEDA,UAAUA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA;YACzBA,CAACA,CAACA,CAACA;QACPA,CAACA,CAACA,CAACA;IACPA,CAACA;AACLA,CAACA;AAED,gCAAgC,OAAsC,EAAE,iBAAuC,EAAE,gBAAwB;IACrIC,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,MAAMA,CAACA,CAACA,CAACA;QAC5BA,SAASA,CAACA,iBAAiBA,CAACA,CAACA;IACjCA,CAACA;IAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,CAACA,MAAMA,KAAKA,OAAOA,CAACA,CAACA,CAACA;QACpCA,IAAIA,OAAOA,GAAGA,CAACA,OAAOA,EAAEA,cAAcA,EAAEA,aAAaA,EAAEA,WAA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MAAMA,EAAEA,QAAQA,CAACA,CAACA;IAC5CA,CAACA,CAACA,CAACA;AACXA,CAACA;AAED,uBAAuB,OAAkC;IACrDC,EAAEA,CAACA,CAACA,EAAEA,CAACA,QAAQA,EAAEA,KAAKA,OAAOA,CAACA,WAAWA,CAACA,CAACA,CAACA;QACxCA,MAAMA,IAAIA,KAAKA,CAACA,kGAAkGA,CAACA,CAACA;IACxHA,CAACA;IAACA,IAAIA,CAACA,CAACA;QACJA,MAAMA,CAACA,eAAOA,EAAEA;aACXA,IAAIA,CAACA,UAACA,YAAqBA;YACxBA,EAAEA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA;gBACfA,MAAMA,CAACA,WAAGA,CAACA,aAAaA,CAACA,OAAOA,CAACA,WAAWA,CAACA;qBACxCA,IAAIA,CAACA;oBACFA,WAAGA,CAACA,kDAA+CA,OAAOA,CAACA,WAAWA,QAAIA,CAACA,CAACA;gBAChFA,CAACA,CAACA,CAACA;YACXA,CAACA;YAEDA,WAAGA,CAACA,4BAA4BA,CAACA,CAACA;QACtCA,CAACA,CAACA,CAACA;IACXA,CAACA;AACLA,CAACA;AAED,6BAA6B,KAAoB,EAAE,OAAqB;IACpEC,EAAEA,CAACA,CAAOA,OAAQA,CAACA,uBAAuBA,IAAIA,KAAKA,CAACA,UAAUA,KAAKA,cAAcA,CAACA,cAAcA,CAACA,CAACA,CAACA;QAC/FA,OAAOA,CAACA,IAAIA,CAACA,KAAKA,CAACA,MAAMA,CAACA,YAAYA,GAAGA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA;IAC7DA,CAACA;IAACA,IAAIA,CAACA,CAACA;QACJA,MAAMA,KAAKA,CAACA;IAChBA,CAACA;AACLA,CAACA;AAED,uBAAuB,IAAY;IAC/BC,MAAMA,CAACA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA;WAC7BA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA;WAC7BA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,KAAKA,CAACA,CAACA,CAACA;AACz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","file":"command-executor.js","sourcesContent":["/// <reference path=\"../../definitions/generated/code-push.d.ts\" />\n\nimport AccountManager = require(\"code-push\");\nimport * as chalk from \"chalk\";\nvar childProcess = require(\"child_process\");\nimport debugCommand from \"./commands/debug\";\nimport * as fs from \"fs\";\nvar mkdirp = require(\"mkdirp\");\nvar g2js = require(\"gradle-to-js/lib/parser\");\nimport * as moment from \"moment\";\nvar opener = require(\"opener\");\nimport * as os from \"os\";\nimport * as path from \"path\";\nvar plist = require(\"plist\");\nvar progress = require(\"progress\");\nvar prompt = require(\"prompt\");\nimport * as Q from \"q\";\nimport * as recursiveFs from \"recursive-fs\";\nvar rimraf = require(\"rimraf\");\nimport * as semver from \"semver\";\nvar simctl = require(\"simctl\");\nimport slash = require(\"slash\");\nvar Table = require(\"cli-table\");\nimport * as yazl from \"yazl\";\nvar which = require(\"which\");\nimport wordwrap = require(\"wordwrap\");\nimport { CommonUtils } from \"./common-utils\";\nimport * as cli from \"../definitions/cli\";\nimport hooks from \"./release-hooks/index\";\nimport { AccessKey, Account, App, CodePushError, CollaboratorMap, CollaboratorProperties, Deployment, DeploymentMetrics, Headers, Package, PackageInfo, Session, UpdateMetrics } from \"code-push/script/types\";\n\nvar configFilePath: string = path.join(process.env.LOCALAPPDATA || process.env.HOME, \".code-push.config\");\nvar emailValidator = require(\"email-validator\");\nvar packageJson = require(\"../package.json\");\nvar parseXml = Q.denodeify(require(\"xml2js\").parseString);\nvar progress = require(\"progress\");\nimport Promise = Q.Promise;\nvar properties = require(\"properties\");\n\nconst ACTIVE_METRICS_KEY: string = \"Active\";\nconst CLI_HEADERS: Headers = {\n    \"X-CodePush-CLI-Version\": packageJson.version\n};\nconst DOWNLOADED_METRICS_KEY: string = \"Downloaded\";\n\ninterface NameToCountMap {\n    [name: string]: number;\n}\n\n/** Deprecated */\ninterface ILegacyLoginConnectionInfo {\n    accessKeyName: string;\n}\n\ninterface ILoginConnectionInfo {\n    accessKey: string;\n    customServerUrl?: string;   // A custom serverUrl for internal debugging purposes\n    preserveAccessKeyOnLogout?: boolean;\n    proxy?: string; // To specify the proxy url explicitly, other than the environment var (HTTP_PROXY)\n    noProxy?: boolean; // To suppress the environment proxy setting, like HTTP_PROXY\n}\n\nexport interface UpdateMetricsWithTotalActive extends UpdateMetrics {\n    totalActive: number;\n}\n\nexport interface PackageWithMetrics {\n    metrics?: UpdateMetricsWithTotalActive;\n}\n\nexport var log = (message: string | Chalk.ChalkChain): void => console.log(message);\nexport var sdk: AccountManager;\nexport var spawn = childProcess.spawn;\nexport var execSync = childProcess.execSync;\n\nvar connectionInfo: ILoginConnectionInfo;\n\nexport var confirm = (message: string = \"Are you sure?\"): Promise<boolean> => {\n    message += \" (y/N):\";\n    return Promise<boolean>((resolve, reject, notify): void => {\n        prompt.message = \"\";\n        prompt.delimiter = \"\";\n\n        prompt.start();\n\n        prompt.get({\n            properties: {\n                response: {\n                    description: chalk.cyan(message)\n                }\n            }\n        }, (err: any, result: any): void => {\n            var accepted = result.response && result.response.toLowerCase() === \"y\";\n            var rejected = !result.response || result.response.toLowerCase() === \"n\";\n\n            if (accepted) {\n                resolve(true);\n            } else {\n                if (!rejected) {\n                    console.log(\"Invalid response: \\\"\" + result.response + \"\\\"\");\n                }\n                resolve(false);\n            }\n        });\n    });\n}\n\nfunction accessKeyAdd(command: cli.IAccessKeyAddCommand): Promise<void> {\n    return sdk.addAccessKey(command.name, command.ttl)\n        .then((accessKey: AccessKey) => {\n            log(`Successfully created the \"${command.name}\" access key: ${accessKey.key}`);\n            log(\"Make sure to save this key value somewhere safe, since you won't be able to view it from the CLI again!\");\n        });\n}\n\nfunction accessKeyPatch(command: cli.IAccessKeyPatchCommand): Promise<void> {\n    const willUpdateName: boolean = isCommandOptionSpecified(command.newName) && command.oldName !== command.newName;\n    const willUpdateTtl: boolean = isCommandOptionSpecified(command.ttl);\n\n    if (!willUpdateName && !willUpdateTtl) {\n        throw new Error(\"A new name and/or TTL must be provided.\");\n    }\n\n    return sdk.patchAccessKey(command.oldName, command.newName, command.ttl)\n        .then((accessKey: AccessKey) => {\n            let logMessage: string = \"Successfully \";\n            if (willUpdateName) {\n                logMessage += `renamed the access key \"${command.oldName}\" to \"${command.newName}\"`;\n            }\n\n            if (willUpdateTtl) {\n                const expirationDate = moment(accessKey.expires).format(\"LLLL\");\n                if (willUpdateName) {\n                    logMessage += ` and changed its expiration date to ${expirationDate}`;\n                } else {\n                    logMessage += `changed the expiration date of the \"${command.oldName}\" access key to ${expirationDate}`;\n                }\n            }\n\n            log(`${logMessage}.`);\n        });\n}\n\nfunction accessKeyList(command: cli.IAccessKeyListCommand): Promise<void> {\n    throwForInvalidOutputFormat(command.format);\n\n    return sdk.getAccessKeys()\n        .then((accessKeys: AccessKey[]): void => {\n            printAccessKeys(command.format, accessKeys);\n        });\n}\n\nfunction accessKeyRemove(command: cli.IAccessKeyRemoveCommand): Promise<void> {\n    return confirm()\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.removeAccessKey(command.accessKey)\n                    .then((): void => {\n                        log(`Successfully removed the \"${command.accessKey}\" access key.`);\n                    });\n            }\n\n            log(\"Access key removal cancelled.\");\n        });\n}\n\nfunction appAdd(command: cli.IAppAddCommand): Promise<void> {\n    // Validate the OS and platform, doing a case insensitve comparison. Note that for CLI examples we\n    // present these values in all lower case, per CLI conventions, but when passed to the REST API the\n    // are in mixed case, per Mobile Center API naming conventions\n\n    var os: string;\n    const normalizedOs = command.os.toLowerCase();\n    if (normalizedOs === \"ios\") {\n        os = \"iOS\";\n    }\n    else if (normalizedOs === \"android\") {\n        os = \"Android\";\n    }\n    else if (normalizedOs === \"windows\") {\n        os = \"Windows\";\n    }\n    else {\n        return Q.reject<void>(new Error(`\"${command.os}\" is an unsupported OS. Available options are \"ios\", \"android\", and \"windows\".`));\n    }\n\n    var platform: string;\n    const normalizedPlatform = command.platform.toLowerCase();\n    if (normalizedPlatform === \"react-native\") {\n        platform = \"React-Native\";\n    }\n    else if (normalizedPlatform === \"cordova\") {\n        platform = \"Cordova\";\n    }\n    else {\n        return Q.reject<void>(new Error(`\"${command.platform}\" is an unsupported platform. Available options are \"react-native\" and \"cordova\".`));\n    }\n\n    return sdk.addApp(command.appName, os, platform, false)\n        .then((app: App): Promise<void> => {\n            log(\"Successfully added the \\\"\" + command.appName + \"\\\" app, along with the following default deployments:\");\n            var deploymentListCommand: cli.IDeploymentListCommand = {\n                type: cli.CommandType.deploymentList,\n                appName: app.name,\n                format: \"table\",\n                displayKeys: true\n            };\n            return deploymentList(deploymentListCommand, /*showPackage=*/ false);\n        });\n}\n\nfunction appList(command: cli.IAppListCommand): Promise<void> {\n    throwForInvalidOutputFormat(command.format);\n    var apps: App[];\n    return sdk.getApps()\n        .then((retrievedApps: App[]): void => {\n            printAppList(command.format, retrievedApps);\n        });\n}\n\nfunction appRemove(command: cli.IAppRemoveCommand): Promise<void> {\n    return confirm(\"Are you sure you want to remove this app? Note that its deployment keys will be PERMANENTLY unrecoverable.\")\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.removeApp(command.appName)\n                    .then((): void => {\n                        log(\"Successfully removed the \\\"\" + command.appName + \"\\\" app.\");\n                    });\n            }\n\n            log(\"App removal cancelled.\");\n        });\n}\n\nfunction appRename(command: cli.IAppRenameCommand): Promise<void> {\n    return sdk.renameApp(command.currentAppName, command.newAppName)\n        .then((): void => {\n            log(\"Successfully renamed the \\\"\" + command.currentAppName + \"\\\" app to \\\"\" + command.newAppName + \"\\\".\");\n        });\n}\n\nexport var createEmptyTempReleaseFolder = (folderPath: string) => {\n    return deleteFolder(folderPath)\n        .then(() => {\n            fs.mkdirSync(folderPath);\n        });\n};\n\nfunction appTransfer(command: cli.IAppTransferCommand): Promise<void> {\n    throwForInvalidEmail(command.email);\n\n    return confirm()\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.transferApp(command.appName, command.email)\n                    .then((): void => {\n                        log(\"Successfully transferred the ownership of app \\\"\" + command.appName + \"\\\" to the account with email \\\"\" + command.email + \"\\\".\");\n                    });\n            }\n\n            log(\"App transfer cancelled.\");\n        });\n}\n\nfunction addCollaborator(command: cli.ICollaboratorAddCommand): Promise<void> {\n    throwForInvalidEmail(command.email);\n\n    return sdk.addCollaborator(command.appName, command.email)\n        .then((): void => {\n            log(\"Collaborator invitation email for \\\"\" + command.appName + \"\\\" sent to \\\"\" + command.email + \"\\\".\");\n        });\n}\n\nfunction listCollaborators(command: cli.ICollaboratorListCommand): Promise<void> {\n    throwForInvalidOutputFormat(command.format);\n\n    return sdk.getCollaborators(command.appName)\n        .then((retrievedCollaborators: CollaboratorMap): void => {\n            printCollaboratorsList(command.format, retrievedCollaborators);\n        });\n}\n\nfunction removeCollaborator(command: cli.ICollaboratorRemoveCommand): Promise<void> {\n    throwForInvalidEmail(command.email);\n\n    return confirm()\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.removeCollaborator(command.appName, command.email)\n                    .then((): void => {\n                        log(\"Successfully removed \\\"\" + command.email + \"\\\" as a collaborator from the app \\\"\" + command.appName + \"\\\".\");\n                    });\n            }\n\n            log(\"App collaborator removal cancelled.\");\n        });\n}\n\nfunction deleteConnectionInfoCache(printMessage: boolean = true): void {\n    try {\n        fs.unlinkSync(configFilePath);\n\n        if (printMessage) {\n            log(`Successfully logged-out. The session file located at ${chalk.cyan(configFilePath)} has been deleted.\\r\\n`);\n        }\n    } catch (ex) {\n    }\n}\n\nfunction deleteFolder(folderPath: string): Promise<void> {\n    return Promise<void>((resolve, reject, notify) => {\n        rimraf(folderPath, (err: any) => {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(<void>null);\n            }\n        });\n    });\n}\n\nfunction deploymentAdd(command: cli.IDeploymentAddCommand): Promise<void> {\n    if (command.default) {\n        return sdk.addDeployment(command.appName, \"Staging\")\n            .then((deployment: Deployment): Promise<Deployment> => {\n                return sdk.addDeployment(command.appName, \"Production\");\n            })\n            .then((deployment: Deployment): Promise<void> => {\n                log(\"Successfully added the \\\"Staging\\\" and \\\"Production\\\" default deployments:\");\n                var deploymentListCommand: cli.IDeploymentListCommand = {\n                    type: cli.CommandType.deploymentList,\n                    appName: command.appName,\n                    format: \"table\",\n                    displayKeys: true\n                };\n                return deploymentList(deploymentListCommand, /*showPackage=*/ false);\n            });\n    }\n    else {\n        return sdk.addDeployment(command.appName, command.deploymentName)\n            .then((deployment: Deployment): void => {\n                log(\"Successfully added the \\\"\" + command.deploymentName + \"\\\" deployment with key \\\"\" + deployment.key + \"\\\" to the \\\"\" + command.appName + \"\\\" app.\");\n            });\n    }\n}\n\nfunction deploymentHistoryClear(command: cli.IDeploymentHistoryClearCommand): Promise<void> {\n    return confirm()\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.clearDeploymentHistory(command.appName, command.deploymentName)\n                    .then((): void => {\n                        log(\"Successfully cleared the release history associated with the \\\"\" + command.deploymentName + \"\\\" deployment from the \\\"\" + command.appName + \"\\\" app.\");\n                    })\n            }\n\n            log(\"Clear deployment cancelled.\");\n        });\n}\n\nexport var deploymentList = (command: cli.IDeploymentListCommand, showPackage: boolean = true): Promise<void> => {\n    throwForInvalidOutputFormat(command.format);\n    var deployments: Deployment[];\n\n    return sdk.getDeployments(command.appName)\n        .then((retrievedDeployments: Deployment[]) => {\n            deployments = retrievedDeployments;\n            if (showPackage) {\n                var metricsPromises: Promise<void>[] = deployments.map((deployment: Deployment) => {\n                    if (deployment.package) {\n                        return sdk.getDeploymentMetrics(command.appName, deployment.name)\n                            .then((metrics: DeploymentMetrics): void => {\n                                if (metrics[deployment.package.label]) {\n                                    var totalActive: number = getTotalActiveFromDeploymentMetrics(metrics);\n                                    (<PackageWithMetrics>(deployment.package)).metrics = {\n                                        active: metrics[deployment.package.label].active,\n                                        downloaded: metrics[deployment.package.label].downloaded,\n                                        failed: metrics[deployment.package.label].failed,\n                                        installed: metrics[deployment.package.label].installed,\n                                        totalActive: totalActive\n                                    };\n                                }\n                            });\n                    } else {\n                        return Q(<void>null);\n                    }\n                });\n\n                return Q.all(metricsPromises);\n            }\n        })\n        .then(() => {\n            printDeploymentList(command, deployments, showPackage);\n        });\n}\n\nfunction deploymentRemove(command: cli.IDeploymentRemoveCommand): Promise<void> {\n    return confirm(\"Are you sure you want to remove this deployment? Note that its deployment key will be PERMANENTLY unrecoverable.\")\n        .then((wasConfirmed: boolean): Promise<void> => {\n            if (wasConfirmed) {\n                return sdk.removeDeployment(command.appName, command.deploymentName)\n                    .then((): void => {\n                        log(\"Successfully removed the \\\"\" + command.deploymentName + \"\\\" deployment from the \\\"\" + command.appName + \"\\\" app.\");\n                    })\n            }\n\n            log(\"Deployment removal cancelled.\");\n        });\n}\n\nfunction deploymentRename(command: cli.IDeploymentRenameCommand): Promise<void> {\n    return sdk.renameDeployment(command.appName, command.currentDeploymentName, command.newDeploymentName)\n        .then((): void => {\n            log(\"Successfully renamed the \\\"\" + command.currentDeploymentName + \"\\\" deployment to \\\"\" + command.newDeploymentName + \"\\\" for the \\\"\" + command.appName + \"\\\" app.\");\n        });\n}\n\nfunction deploymentHistory(command: cli.IDeploymentHistoryCommand): Promise<void> {\n    throwForInvalidOutputFormat(command.format);\n\n    return Q.all<any>([\n        sdk.getAccountInfo(),\n        sdk.getDeploymentHistory(command.appName, command.deploymentName),\n        sdk.getDeploymentMetrics(command.appName, command.deploymentName)\n    ])\n        .spread<void>((account: Account, deploymentHistory: Package[], metrics: DeploymentMetrics): void => {\n            var totalActive: number = getTotalActiveFromDeploymentMetrics(metrics);\n            deploymentHistory.forEach((packageObject: Package) => {\n                if (metrics[packageObject.label]) {\n                    (<PackageWithMetrics>packageObject).metrics = {\n                        active: metrics[packageObject.label].active,\n                        downloaded: metrics[packageObject.label].downloaded,\n                        failed: metrics[packageObject.label].failed,\n                        installed: metrics[packageObject.label].installed,\n                        totalActive: totalActive\n                    };\n                }\n            });\n            printDeploymentHistory(command, <PackageWithMetrics[]>deploymentHistory, account.email);\n        });\n}\n\nfunction deserializeConnectionInfo(): ILoginConnectionInfo {\n    try {\n        var savedConnection: string = fs.readFileSync(configFilePath, { encoding: \"utf8\" });\n        var connectionInfo: ILegacyLoginConnectionInfo | ILoginConnectionInfo = JSON.parse(savedConnection);\n\n        // If the connection info is in the legacy format, convert it to the modern format\n        if ((<ILegacyLoginConnectionInfo>connectionInfo).accessKeyName) {\n            connectionInfo = <ILoginConnectionInfo>{\n                accessKey: (<ILegacyLoginConnectionInfo>connectionInfo).accessKeyName\n            };\n        }\n\n        var connInfo = <ILoginConnectionInfo>connectionInfo;\n\n        connInfo.proxy = getProxy(connInfo.proxy, connInfo.noProxy);\n\n        return connInfo;\n    } catch (ex) {\n        return;\n    }\n}\n\nexport function execute(command: cli.ICommand): Promise<void> {\n    connectionInfo = deserializeConnectionInfo();\n\n    return Q(<void>null)\n        .then(() => {\n            switch (command.type) {\n                // Must not be logged in\n                case cli.CommandType.login:\n                case cli.CommandType.register:\n                    if (connectionInfo) {\n                        throw new Error(\"You are already logged in from this machine.\");\n                    }\n                    break;\n\n                // It does not matter whether you are logged in or not\n                case cli.CommandType.link:\n                    break;\n\n                // Must be logged in\n                default:\n                    if (!!sdk) break; // Used by unit tests to skip authentication\n\n                    if (!connectionInfo) {\n                        throw new Error(\"You are not currently logged in. Run the 'code-push login' command to authenticate with the CodePush server.\");\n                    }\n\n                    sdk = getSdk(connectionInfo.accessKey, CLI_HEADERS, connectionInfo.customServerUrl, connectionInfo.proxy);\n                    break;\n            }\n\n            switch (command.type) {\n                case cli.CommandType.accessKeyAdd:\n                    return accessKeyAdd(<cli.IAccessKeyAddCommand>command);\n\n                case cli.CommandType.accessKeyPatch:\n                    return accessKeyPatch(<cli.IAccessKeyPatchCommand>command);\n\n                case cli.CommandType.accessKeyList:\n                    return accessKeyList(<cli.IAccessKeyListCommand>command);\n\n                case cli.CommandType.accessKeyRemove:\n                    return accessKeyRemove(<cli.IAccessKeyRemoveCommand>command);\n\n                case cli.CommandType.appAdd:\n                    return appAdd(<cli.IAppAddCommand>command);\n\n                case cli.CommandType.appList:\n                    return appList(<cli.IAppListCommand>command);\n\n                case cli.CommandType.appRemove:\n                    return appRemove(<cli.IAppRemoveCommand>command);\n\n                case cli.CommandType.appRename:\n                    return appRename(<cli.IAppRenameCommand>command);\n\n                case cli.CommandType.appTransfer:\n                    return appTransfer(<cli.IAppTransferCommand>command);\n\n                case cli.CommandType.collaboratorAdd:\n                    return addCollaborator(<cli.ICollaboratorAddCommand>command);\n\n                case cli.CommandType.collaboratorList:\n                    return listCollaborators(<cli.ICollaboratorListCommand>command);\n\n                case cli.CommandType.collaboratorRemove:\n                    return removeCollaborator(<cli.ICollaboratorRemoveCommand>command);\n\n                case cli.CommandType.debug:\n                    return debugCommand(<cli.IDebugCommand>command);\n\n                case cli.CommandType.deploymentAdd:\n                    return deploymentAdd(<cli.IDeploymentAddCommand>command);\n\n                case cli.CommandType.deploymentHistoryClear:\n                    return deploymentHistoryClear(<cli.IDeploymentHistoryClearCommand>command);\n\n                case cli.CommandType.deploymentHistory:\n                    return deploymentHistory(<cli.IDeploymentHistoryCommand>command);\n\n                case cli.CommandType.deploymentList:\n                    return deploymentList(<cli.IDeploymentListCommand>command);\n\n                case cli.CommandType.deploymentRemove:\n                    return deploymentRemove(<cli.IDeploymentRemoveCommand>command);\n\n                case cli.CommandType.deploymentRename:\n                    return deploymentRename(<cli.IDeploymentRenameCommand>command);\n\n                case cli.CommandType.link:\n                    return link(<cli.ILinkCommand>command);\n\n                case cli.CommandType.login:\n                    return login(<cli.ILoginCommand>command);\n\n                case cli.CommandType.logout:\n                    return logout(command);\n\n                case cli.CommandType.patch:\n                    return patch(<cli.IPatchCommand>command);\n\n                case cli.CommandType.promote:\n                    return promote(<cli.IPromoteCommand>command);\n\n                case cli.CommandType.register:\n                    return register(<cli.IRegisterCommand>command);\n\n                case cli.CommandType.release:\n                    return release(<cli.IReleaseCommand>command);\n\n                case cli.CommandType.releaseCordova:\n                    return releaseCordova(<cli.IReleaseCordovaCommand>command);\n\n                case cli.CommandType.releaseReact:\n                    return releaseReact(<cli.IReleaseReactCommand>command);\n\n                case cli.CommandType.rollback:\n                    return rollback(<cli.IRollbackCommand>command);\n\n                case cli.CommandType.sessionList:\n                    return sessionList(<cli.ISessionListCommand>command);\n\n                case cli.CommandType.sessionRemove:\n                    return sessionRemove(<cli.ISessionRemoveCommand>command);\n\n                case cli.CommandType.whoami:\n                    return whoami(command);\n\n                default:\n                    // We should never see this message as invalid commands should be caught by the argument parser.\n                    throw new Error(\"Invalid command:  \" + JSON.stringify(command));\n            }\n        });\n}\n\nfunction fileDoesNotExistOrIsDirectory(filePath: string): boolean {\n    try {\n        return fs.lstatSync(filePath).isDirectory();\n    } catch (error) {\n        return true;\n    }\n}\n\nfunction getTotalActiveFromDeploymentMetrics(metrics: DeploymentMetrics): number {\n    var totalActive = 0;\n    Object.keys(metrics).forEach((label: string) => {\n        totalActive += metrics[label].active;\n    });\n\n    return totalActive;\n}\n\nfunction initiateExternalAuthenticationAsync(action: string, serverUrl?: string): void {\n    var message: string;\n\n    if (action === \"link\") {\n        message = `Please login to Mobile Center in the browser window we've just opened.\\nIf you login with an additional authentication provider (e.g. GitHub) that shares the same email address, it will be linked to your current Mobile Center account.`;\n\n        // For \"link\" there shouldn't be a token prompt, so we go straight to the Mobile Center URL to avoid that\n        log(message);\n        var url: string = serverUrl || AccountManager.MOBILE_CENTER_SERVER_URL;\n        opener(url);\n    }\n    else {\n        // We use this now for both login & register\n        message = `Please login to Mobile Center in the browser window we've just opened.`;\n\n        log(message);\n        var hostname: string = os.hostname();\n        var url: string = `${serverUrl || AccountManager.SERVER_URL}/auth/${action}?hostname=${hostname}`;\n        opener(url);\n    }\n}\n\nfunction link(command: cli.ILinkCommand): Promise<void> {\n    initiateExternalAuthenticationAsync(\"link\", command.serverUrl);\n    return Q(<void>null);\n}\n\nfunction login(command: cli.ILoginCommand): Promise<void> {\n    // Check if one of the flags were provided.\n    if (command.accessKey) {\n        var proxy = getProxy(command.proxy, command.noProxy);\n        sdk = getSdk(command.accessKey, CLI_HEADERS, command.serverUrl, proxy);\n        return sdk.isAuthenticated()\n            .then((isAuthenticated: boolean): void => {\n                if (isAuthenticated) {\n                    serializeConnectionInfo(command.accessKey, /*preserveAccessKeyOnLogout*/ true, command.serverUrl, command.proxy, command.noProxy);\n                } else {\n                    throw new Error(\"Invalid access key.\");\n                }\n            });\n    } else {\n        return loginWithExternalAuthentication(\"login\", command.serverUrl, command.proxy, command.noProxy);\n    }\n}\n\nfunction loginWithExternalAuthentication(action: string, serverUrl?: string, proxy?: string, noProxy?: boolean): Promise<void> {\n    initiateExternalAuthenticationAsync(action, serverUrl);\n    log(\"\");    // Insert newline\n\n    return requestAccessKey()\n        .then((accessKey: string): Promise<void> => {\n            if (accessKey === null) {\n                // The user has aborted the synchronous prompt (e.g.:  via [CTRL]+[C]).\n                return;\n            }\n\n            sdk = getSdk(accessKey, CLI_HEADERS, serverUrl, getProxy(proxy, noProxy));\n\n            return sdk.isAuthenticated()\n                .then((isAuthenticated: boolean): void => {\n                    if (isAuthenticated) {\n                        serializeConnectionInfo(accessKey, /*preserveAccessKeyOnLogout*/ false, serverUrl, proxy, noProxy);\n                    } else {\n                        throw new Error(\"Invalid token.\");\n                    }\n                });\n        });\n}\n\nfunction logout(command: cli.ICommand): Promise<void> {\n    return Q(<void>null)\n        .then((): Promise<void> => {\n            if (!connectionInfo.preserveAccessKeyOnLogout) {\n                var machineName: string = os.hostname();\n                return sdk.removeSession(machineName)\n                    .catch((error: CodePushError) => {\n                        // If we are not authenticated or the session doesn't exist anymore, just swallow the error instead of displaying it\n                        if (error.statusCode !== AccountManager.ERROR_UNAUTHORIZED && error.statusCode !== AccountManager.ERROR_NOT_FOUND) {\n                            throw error;\n                        }\n                    });\n            }\n        })\n        .then((): void => {\n            sdk = null;\n            deleteConnectionInfoCache();\n        });\n}\n\nfunction formatDate(unixOffset: number): string {\n    var date: moment.Moment = moment(unixOffset);\n    var now: moment.Moment = moment();\n    if (Math.abs(now.diff(date, \"days\")) < 30) {\n        return date.fromNow();                  // \"2 hours ago\"\n    } else if (now.year() === date.year()) {\n        return date.format(\"MMM D\");            // \"Nov 6\"\n    } else {\n        return date.format(\"MMM D, YYYY\");      // \"Nov 6, 2014\"\n    }\n}\n\nfunction printAppList(format: string, apps: App[]): void {\n    if (format === \"json\") {\n        printJson(apps);\n    } else if (format === \"table\") {\n        var headers = [\"Name\", \"Deployments\"];\n        printTable(headers, (dataSource: any[]): void => {\n            apps.forEach((app: App, index: number): void => {\n                var row = [app.name, wordwrap(50)(app.deployments.join(\", \"))];\n                dataSource.push(row);\n            });\n        });\n    }\n}\n\nfunction getCollaboratorDisplayName(email: string, collaboratorProperties: CollaboratorProperties): string {\n    return (collaboratorProperties.permission === AccountManager.AppPermission.OWNER) ? email + chalk.magenta(\" (Owner)\") : email;\n}\n\nfunction printCollaboratorsList(format: string, collaborators: CollaboratorMap): void {\n    if (format === \"json\") {\n        var dataSource = { \"collaborators\": collaborators };\n        printJson(dataSource);\n    } else if (format === \"table\") {\n        var headers = [\"E-mail Address\"];\n        printTable(headers, (dataSource: any[]): void => {\n            Object.keys(collaborators).forEach((email: string): void => {\n                var row = [getCollaboratorDisplayName(email, collaborators[email])];\n                dataSource.push(row);\n            });\n        });\n    }\n}\n\nfunction printDeploymentList(command: cli.IDeploymentListCommand, deployments: Deployment[], showPackage: boolean = true): void {\n    if (command.format === \"json\") {\n        printJson(deployments);\n    } else if (command.format === \"table\") {\n        var headers = [\"Name\"];\n        if (command.displayKeys) {\n            headers.push(\"Deployment Key\");\n        }\n\n        if (showPackage) {\n            headers.push(\"Update Metadata\");\n            headers.push(\"Install Metrics\");\n        }\n\n        printTable(headers, (dataSource: any[]): void => {\n            deployments.forEach((deployment: Deployment): void => {\n                var row = [deployment.name];\n                if (command.displayKeys) {\n                    row.push(deployment.key);\n                }\n\n                if (showPackage) {\n                    row.push(getPackageString(deployment.package));\n                    row.push(getPackageMetricsString(deployment.package));\n                }\n\n                dataSource.push(row);\n            });\n        });\n    }\n}\n\nfunction printDeploymentHistory(command: cli.IDeploymentHistoryCommand, deploymentHistory: PackageWithMetrics[], currentUserEmail: string): void {\n    if (command.format === \"json\") {\n        printJson(deploymentHistory);\n    } else if (command.format === \"table\") {\n        var headers = [\"Label\", \"Release Time\", \"App Version\", \"Mandatory\"];\n        if (command.displayAuthor) {\n            headers.push(\"Released By\");\n        }\n\n        headers.push(\"Description\", \"Install Metrics\");\n\n        printTable(headers, (dataSource: any[]) => {\n            deploymentHistory.forEach((packageObject: Package) => {\n                var releaseTime: string = formatDate(packageObject.uploadTime);\n                var releaseSource: string;\n                if (packageObject.releaseMethod === \"Promote\") {\n                    releaseSource = `Promoted ${packageObject.originalLabel} from \"${packageObject.originalDeployment}\"`;\n                } else if (packageObject.releaseMethod === \"Rollback\") {\n                    var labelNumber: number = parseInt(packageObject.label.substring(1));\n                    var lastLabel: string = \"v\" + (labelNumber - 1);\n                    releaseSource = `Rolled back ${lastLabel} to ${packageObject.originalLabel}`;\n                }\n\n                if (releaseSource) {\n                    releaseTime += \"\\n\" + chalk.magenta(`(${releaseSource})`).toString();\n                }\n\n                var row: string[] = [packageObject.label, releaseTime, packageObject.appVersion, packageObject.isMandatory ? \"Yes\" : \"No\"];\n                if (command.displayAuthor) {\n                    var releasedBy: string = packageObject.releasedBy ? packageObject.releasedBy : \"\";\n                    if (currentUserEmail && releasedBy === currentUserEmail) {\n                        releasedBy = \"You\";\n                    }\n\n                    row.push(releasedBy);\n                }\n\n                row.push(packageObject.description ? wordwrap(30)(packageObject.description) : \"\");\n                row.push(getPackageMetricsString(packageObject) + (packageObject.isDisabled ? `\\n${chalk.green(\"Disabled:\")} Yes` : \"\"));\n                if (packageObject.isDisabled) {\n                    row = row.map((cellContents: string) => applyChalkSkippingLineBreaks(cellContents, (<any>chalk).dim));\n                }\n\n                dataSource.push(row);\n            });\n        });\n    }\n}\n\nfunction applyChalkSkippingLineBreaks(applyString: string, chalkMethod: (string: string) => Chalk.ChalkChain): string {\n    // Used to prevent \"chalk\" from applying styles to linebreaks which\n    // causes table border chars to have the style applied as well.\n    return applyString\n        .split(\"\\n\")\n        .map((token: string) => chalkMethod(token))\n        .join(\"\\n\");\n}\n\nfunction getPackageString(packageObject: Package): string {\n    if (!packageObject) {\n        return chalk.magenta(\"No updates released\").toString();\n    }\n\n    var packageString: string = chalk.green(\"Label: \") + packageObject.label + \"\\n\" +\n        chalk.green(\"App Version: \") + packageObject.appVersion + \"\\n\" +\n        chalk.green(\"Mandatory: \") + (packageObject.isMandatory ? \"Yes\" : \"No\") + \"\\n\" +\n        chalk.green(\"Release Time: \") + formatDate(packageObject.uploadTime) + \"\\n\" +\n        chalk.green(\"Released By: \") + (packageObject.releasedBy ? packageObject.releasedBy : \"\") +\n        (packageObject.description ? wordwrap(70)(\"\\n\" + chalk.green(\"Description: \") + packageObject.description) : \"\");\n\n    if (packageObject.isDisabled) {\n        packageString += `\\n${chalk.green(\"Disabled:\")} Yes`;\n    }\n\n    return packageString;\n}\n\nfunction getPackageMetricsString(obj: Package): string {\n    var packageObject = <PackageWithMetrics>obj;\n    var rolloutString: string = (obj && obj.rollout && obj.rollout !== 100) ? `\\n${chalk.green(\"Rollout:\")} ${obj.rollout.toLocaleString()}%` : \"\";\n\n    if (!packageObject || !packageObject.metrics) {\n        return chalk.magenta(\"No installs recorded\").toString() + (rolloutString || \"\");\n    }\n\n    var activePercent: number = packageObject.metrics.totalActive\n        ? packageObject.metrics.active / packageObject.metrics.totalActive * 100\n        : 0.0;\n    var percentString: string;\n    if (activePercent === 100.0) {\n        percentString = \"100%\";\n    } else if (activePercent === 0.0) {\n        percentString = \"0%\";\n    } else {\n        percentString = activePercent.toPrecision(2) + \"%\";\n    }\n\n    var numPending: number = packageObject.metrics.downloaded - packageObject.metrics.installed - packageObject.metrics.failed;\n    var returnString: string = chalk.green(\"Active: \") + percentString + \" (\" + packageObject.metrics.active.toLocaleString() + \" of \" + packageObject.metrics.totalActive.toLocaleString() + \")\\n\" +\n        chalk.green(\"Total: \") + packageObject.metrics.installed.toLocaleString();\n\n    if (numPending > 0) {\n        returnString += \" (\" + numPending.toLocaleString() + \" pending)\";\n    }\n\n    if (packageObject.metrics.failed) {\n        returnString += \"\\n\" + chalk.green(\"Rollbacks: \") + chalk.red(packageObject.metrics.failed.toLocaleString() + \"\");\n    }\n\n    if (rolloutString) {\n        returnString += rolloutString;\n    }\n\n    return returnString;\n}\n\nfunction getReactNativeProjectAppVersion(command: cli.IReleaseReactCommand, projectName: string): Promise<string> {\n    const fileExists = (file: string): boolean => {\n        try { return fs.statSync(file).isFile() }\n        catch (e) { return false }\n    };\n\n    // Allow plain integer versions (as well as '1.0' values) for now, e.g. '1' is valid here and we assume that it is equal to '1.0.0'.\n    // (missing minor/patch values will be added on server side to pass semver.satisfies check)\n    const isValidVersion = (version: string): boolean => !!semver.valid(version) || /^\\d+\\.\\d+$/.test(version) || /^\\d+$/.test(version);\n\n    log(chalk.cyan(`Detecting ${command.platform} app version:\\n`));\n\n    if (command.platform === \"ios\") {\n        let resolvedPlistFile: string = command.plistFile;\n        if (resolvedPlistFile) {\n            // If a plist file path is explicitly provided, then we don't\n            // need to attempt to \"resolve\" it within the well-known locations.\n            if (!fileExists(resolvedPlistFile)) {\n                throw new Error(\"The specified plist file doesn't exist. Please check that the provided path is correct.\");\n            }\n        } else {\n            // Allow the plist prefix to be specified with or without a trailing\n            // separator character, but prescribe the use of a hyphen when omitted,\n            // since this is the most commonly used convetion for plist files.\n            if (command.plistFilePrefix && /.+[^-.]$/.test(command.plistFilePrefix)) {\n                command.plistFilePrefix += \"-\";\n            }\n\n            const iOSDirectory: string = \"ios\";\n            const plistFileName = `${command.plistFilePrefix || \"\"}Info.plist`;\n\n            const knownLocations = [\n                path.join(iOSDirectory, projectName, plistFileName),\n                path.join(iOSDirectory, plistFileName)\n            ];\n\n            resolvedPlistFile = (<any>knownLocations).find(fileExists);\n\n            if (!resolvedPlistFile) {\n                throw new Error(`Unable to find either of the following plist files in order to infer your app's binary version: \"${knownLocations.join(\"\\\", \\\"\")}\". If your plist has a different name, or is located in a different directory, consider using either the \"--plistFile\" or \"--plistFilePrefix\" parameters to help inform the CLI how to find it.`);\n            }\n        }\n\n        const plistContents = fs.readFileSync(resolvedPlistFile).toString();\n\n        try {\n            var parsedPlist = plist.parse(plistContents);\n        } catch (e) {\n            throw new Error(`Unable to parse \"${resolvedPlistFile}\". Please ensure it is a well-formed plist file.`);\n        }\n\n        if (parsedPlist && parsedPlist.CFBundleShortVersionString) {\n            if (isValidVersion(parsedPlist.CFBundleShortVersionString)) {\n                log(`Using the target binary version value \"${parsedPlist.CFBundleShortVersionString}\" from \"${resolvedPlistFile}\".\\n`);\n                return Q(parsedPlist.CFBundleShortVersionString);\n            } else {\n                throw new Error(`The \"CFBundleShortVersionString\" key in the \"${resolvedPlistFile}\" file needs to specify a valid semver string, containing both a major and minor version (e.g. 1.3.2, 1.1).`);\n            }\n        } else {\n            throw new Error(`The \"CFBundleShortVersionString\" key doesn't exist within the \"${resolvedPlistFile}\" file.`);\n        }\n    } else if (command.platform === \"android\") {\n        let buildGradlePath: string = path.join(\"android\", \"app\");\n        if (command.gradleFile) {\n            buildGradlePath = command.gradleFile;\n        }\n        if (fs.lstatSync(buildGradlePath).isDirectory()) {\n            buildGradlePath = path.join(buildGradlePath, \"build.gradle\");\n        }\n\n        if (fileDoesNotExistOrIsDirectory(buildGradlePath)) {\n            throw new Error(`Unable to find gradle file \"${buildGradlePath}\".`);\n        }\n\n        return g2js.parseFile(buildGradlePath)\n            .catch(() => {\n                throw new Error(`Unable to parse the \"${buildGradlePath}\" file. Please ensure it is a well-formed Gradle file.`);\n            })\n            .then((buildGradle: any) => {\n                let versionName: string = null;\n\n                if (buildGradle.android && buildGradle.android.defaultConfig && buildGradle.android.defaultConfig.versionName) {\n                    versionName = buildGradle.android.defaultConfig.versionName;\n                } else {\n                    throw new Error(`The \"${buildGradlePath}\" file doesn't specify a value for the \"android.defaultConfig.versionName\" property.`);\n                }\n\n                if (typeof versionName !== \"string\") {\n                    throw new Error(`The \"android.defaultConfig.versionName\" property value in \"${buildGradlePath}\" is not a valid string. If this is expected, consider using the --targetBinaryVersion option to specify the value manually.`);\n                }\n\n                let appVersion: string = versionName.replace(/\"/g, \"\").trim();\n\n                if (isValidVersion(appVersion)) {\n                    // The versionName property is a valid semver string,\n                    // so we can safely use that and move on.\n                    log(`Using the target binary version value \"${appVersion}\" from \"${buildGradlePath}\".\\n`);\n                    return appVersion;\n                } else if (/^\\d.*/.test(appVersion)) {\n                    // The versionName property isn't a valid semver string,\n                    // but it starts with a number, and therefore, it can't\n                    // be a valid Gradle property reference.\n                    throw new Error(`The \"android.defaultConfig.versionName\" property in the \"${buildGradlePath}\" file needs to specify a valid semver string, containing both a major and minor version (e.g. 1.3.2, 1.1).`);\n                }\n\n                // The version property isn't a valid semver string\n                // so we assume it is a reference to a property variable.\n                const propertyName = appVersion.replace(\"project.\", \"\");\n                const propertiesFileName = \"gradle.properties\";\n\n                const knownLocations = [\n                    path.join(\"android\", \"app\", propertiesFileName),\n                    path.join(\"android\", propertiesFileName)\n                ];\n\n                // Search for gradle properties across all `gradle.properties` files\n                var propertiesFile: string = null;\n                for (var i = 0; i < knownLocations.length; i++) {\n                    propertiesFile = knownLocations[i];\n                    if (fileExists(propertiesFile)) {\n                        const propertiesContent: string = fs.readFileSync(propertiesFile).toString();\n                        try {\n                            const parsedProperties: any = properties.parse(propertiesContent);\n                            appVersion = parsedProperties[propertyName];\n                            if (appVersion) {\n                                break;\n                            }\n                        } catch (e) {\n                            throw new Error(`Unable to parse \"${propertiesFile}\". Please ensure it is a well-formed properties file.`);\n                        }\n                    }\n                }\n\n                if (!appVersion) {\n                    throw new Error(`No property named \"${propertyName}\" exists in the \"${propertiesFile}\" file.`);\n                }\n\n                if (!isValidVersion(appVersion)) {\n                    throw new Error(`The \"${propertyName}\" property in the \"${propertiesFile}\" file needs to specify a valid semver string, containing both a major and minor version (e.g. 1.3.2, 1.1).`);\n                }\n\n                log(`Using the target binary version value \"${appVersion}\" from the \"${propertyName}\" key in the \"${propertiesFile}\" file.\\n`);\n                return appVersion.toString();\n            });\n    } else {\n        var appxManifestFileName: string = \"Package.appxmanifest\";\n        try {\n            var appxManifestContainingFolder: string = path.join(\"windows\", projectName);\n            var appxManifestContents: string = fs.readFileSync(path.join(appxManifestContainingFolder, \"Package.appxmanifest\")).toString();\n        } catch (err) {\n            throw new Error(`Unable to find or read \"${appxManifestFileName}\" in the \"${path.join(\"windows\", projectName)}\" folder.`);\n        }\n\n        return parseXml(appxManifestContents)\n            .catch((err: any) => {\n                throw new Error(`Unable to parse the \"${path.join(appxManifestContainingFolder, appxManifestFileName)}\" file, it could be malformed.`);\n            })\n            .then((parsedAppxManifest: any) => {\n                try {\n                    return parsedAppxManifest.Package.Identity[0][\"$\"].Version.match(/^\\d+\\.\\d+\\.\\d+/)[0];\n                } catch (e) {\n                    throw new Error(`Unable to parse the package version from the \"${path.join(appxManifestContainingFolder, appxManifestFileName)}\" file.`);\n                }\n            });\n    }\n}\n\nfunction printJson(object: any): void {\n    log(JSON.stringify(object, /*replacer=*/ null, /*spacing=*/ 2));\n}\n\nfunction printAccessKeys(format: string, keys: AccessKey[]): void {\n    if (format === \"json\") {\n        printJson(keys);\n    } else if (format === \"table\") {\n        printTable([\"Name\", \"Created\" /*, \"Expires\" */], (dataSource: any[]): void => {\n            var now = new Date().getTime();\n\n            function isExpired(key: AccessKey): boolean {\n                return now >= key.expires;\n            }\n\n            // Access keys never expire in Mobile Center (at least for now--maybe that feature will get added later), so don't show the Expires column anymore\n            function keyToTableRow(key: AccessKey, dim: boolean): string[] {\n                var row: string[] = [\n                    key.name,\n                    key.createdTime ? formatDate(key.createdTime) : \"\"\n                    /* formatDate(key.expires) */\n                ];\n\n                if (dim) {\n                    row.forEach((col: string, index: number) => {\n                        row[index] = (<any>chalk).dim(col);\n                    });\n                }\n\n                return row;\n            }\n\n            keys.forEach((key: AccessKey) =>\n                !isExpired(key) && dataSource.push(keyToTableRow(key, /*dim*/ false)));\n            keys.forEach((key: AccessKey) =>\n                isExpired(key) && dataSource.push(keyToTableRow(key, /*dim*/ true)));\n        });\n    }\n}\n\nfunction printSessions(format: string, sessions: Session[]): void {\n    if (format === \"json\") {\n        printJson(sessions);\n    } else if (format === \"table\") {\n        printTable([\"Machine\", \"Logged in\"], (dataSource: any[]): void => {\n            sessions.forEach((session: Session) =>\n                dataSource.push([session.machineName, formatDate(session.loggedInTime)]));\n        });\n    }\n}\n\nfunction printTable(columnNames: string[], readData: (dataSource: any[]) => void): void {\n    var table = new Table({\n        head: columnNames,\n        style: { head: [\"cyan\"] }\n    });\n\n    readData(table);\n\n    log(table.toString());\n}\n\nfunction register(command: cli.IRegisterCommand): Promise<void> {\n    return loginWithExternalAuthentication(\"register\", command.serverUrl, command.proxy, command.noProxy);\n}\n\nfunction promote(command: cli.IPromoteCommand): Promise<void> {\n    var packageInfo: PackageInfo = {\n        appVersion: command.appStoreVersion,\n        description: command.description,\n        label: command.label,\n        isDisabled: command.disabled,\n        isMandatory: command.mandatory,\n        rollout: command.rollout\n    };\n\n    return sdk.promote(command.appName, command.sourceDeploymentName, command.destDeploymentName, packageInfo)\n        .then((): void => {\n            log(\"Successfully promoted \" + (command.label ? \"\\\"\" + command.label + \"\\\" of \" : \"\") + \"the \\\"\" + command.sourceDeploymentName + \"\\\" deployment of the \\\"\" + command.appName + \"\\\" app to the \\\"\" + command.destDeploymentName + \"\\\" deployment.\");\n        })\n        .catch((err: CodePushError) => releaseErrorHandler(err, command));\n}\n\nfunction patch(command: cli.IPatchCommand): Promise<void> {\n    var packageInfo: PackageInfo = {\n        appVersion: command.appStoreVersion,\n        description: command.description,\n        isMandatory: command.mandatory,\n        isDisabled: command.disabled,\n        rollout: command.rollout\n    };\n\n    for (var updateProperty in packageInfo) {\n        if ((<any>packageInfo)[updateProperty] !== null) {\n            return sdk.patchRelease(command.appName, command.deploymentName, command.label, packageInfo)\n                .then((): void => {\n                    log(`Successfully updated the \"${command.label ? command.label : `latest`}\" release of \"${command.appName}\" app's \"${command.deploymentName}\" deployment.`);\n                });\n        }\n    }\n\n    throw new Error(\"At least one property must be specified to patch a release.\");\n}\n\nexport var release = (command: cli.IReleaseCommand): Promise<void> => {\n\n    if (isBinaryOrZip(command.package)) {\n        throw new Error(\"It is unnecessary to package releases in a .zip or binary file. Please specify the direct path to the update content's directory (e.g. /platforms/ios/www) or file (e.g. main.jsbundle).\");\n    }\n\n    throwForInvalidSemverRange(command.appStoreVersion);\n\n    return Q(<void>null).then(() => {\n        // Copy the command so that the original is not modified\n        var currentCommand: cli.IReleaseCommand = {\n            appName: command.appName,\n            appStoreVersion: command.appStoreVersion,\n            deploymentName: command.deploymentName,\n            description: command.description,\n            disabled: command.disabled,\n            mandatory: command.mandatory,\n            package: command.package,\n            rollout: command.rollout,\n            privateKeyPath: command.privateKeyPath,\n            type: command.type\n        };\n\n        var releaseHooksPromise = hooks.reduce((accumulatedPromise: Q.Promise<cli.IReleaseCommand>, hook: cli.ReleaseHook) => {\n            return accumulatedPromise\n                .then((modifiedCommand: cli.IReleaseCommand) => {\n                    currentCommand = modifiedCommand || currentCommand;\n                    return hook(currentCommand, command, sdk);\n                });\n        }, Q(currentCommand));\n\n        return releaseHooksPromise\n            .then(() => { })\n            .catch((err: CodePushError) => releaseErrorHandler(err, command));\n    });\n}\n\nexport var releaseCordova = (command: cli.IReleaseCordovaCommand): Promise<void> => {\n    var releaseCommand: cli.IReleaseCommand = <any>command;\n    // Check for app and deployment exist before releasing an update.\n    // This validation helps to save about 1 minute or more in case user has typed wrong app or deployment name.\n    return validateDeployment(command.appName, command.deploymentName)\n        .then((): any => {\n            var platform: string = command.platform.toLowerCase();\n            var projectRoot: string = process.cwd();\n            var platformFolder: string = path.join(projectRoot, \"platforms\", platform);\n            var platformCordova: string = path.join(platformFolder, \"cordova\");\n            var outputFolder: string;\n\n            if (platform === \"ios\") {\n                outputFolder = path.join(platformFolder, \"www\");\n            } else if (platform === \"android\") {\n                \n                // Since cordova-android 7 assets directory moved to android/app/src/main/assets instead of android/assets                \n                const outputFolderVer7 = path.join(platformFolder, \"app\", \"src\", \"main\", \"assets\", \"www\");\n                if (fs.existsSync(outputFolderVer7)) {\n                    outputFolder = outputFolderVer7;\n                } else {\n                    outputFolder = path.join(platformFolder, \"assets\", \"www\");\n                }\n            } else {\n                throw new Error(\"Platform must be either \\\"ios\\\" or \\\"android\\\".\");\n            }\n\n            var cordovaCommand: string = command.build ?\n                (command.isReleaseBuildType ? \"build --release\" : \"build\") :\n                \"prepare\";\n            var cordovaCLI: string = \"cordova\";\n\n            // Check whether the Cordova or PhoneGap CLIs are\n            // installed, and if not, fail early\n            try {\n                which.sync(cordovaCLI);\n            } catch (e) {\n                try {\n                    cordovaCLI = \"phonegap\";\n                    which.sync(cordovaCLI);\n                } catch (e) {\n                    throw new Error(`Unable to ${cordovaCommand} project. Please ensure that either the Cordova or PhoneGap CLI is installed.`);\n                }\n            }\n\n            log(chalk.cyan(`Running \"${cordovaCLI} ${cordovaCommand}\" command:\\n`));\n            try {\n                execSync([cordovaCLI, cordovaCommand, platform, \"--verbose\"].join(\" \"), { stdio: \"inherit\" });\n            } catch (error) {\n                throw new Error(`Unable to ${cordovaCommand} project. Please ensure that the CWD represents a Cordova project and that the \"${platform}\" platform was added by running \"${cordovaCLI} platform add ${platform}\".`);\n            }\n\n            try {\n                var configString: string = fs.readFileSync(path.join(projectRoot, \"config.xml\"), { encoding: \"utf8\" });\n            } catch (error) {\n                throw new Error(`Unable to find or read \"config.xml\" in the CWD. The \"release-cordova\" command must be executed in a Cordova project folder.`);\n            }\n\n            var configPromise: Promise<any> = parseXml(configString);\n\n            releaseCommand.package = outputFolder;\n            releaseCommand.type = cli.CommandType.release;\n\n            return configPromise\n                .catch((err: any) => {\n                    throw new Error(`Unable to parse \"config.xml\" in the CWD. Ensure that the contents of \"config.xml\" is valid XML.`);\n                });\n        })\n        .then((parsedConfig: any) => {\n            var config: any = parsedConfig.widget;\n\n            var releaseTargetVersion: string;\n            if (command.appStoreVersion) {\n                releaseTargetVersion = command.appStoreVersion;\n            } else {\n                releaseTargetVersion = config[\"$\"].version;\n            }\n\n            throwForInvalidSemverRange(releaseTargetVersion);\n            releaseCommand.appStoreVersion = releaseTargetVersion;\n\n            log(chalk.cyan(\"\\nReleasing update contents to CodePush:\\n\"));\n            return release(releaseCommand);\n        });\n}\n\nexport var releaseReact = (command: cli.IReleaseReactCommand): Promise<void> => {\n    var bundleName: string = command.bundleName;\n    var entryFile: string = command.entryFile;\n    var outputFolder: string = command.outputDir || path.join(os.tmpdir(), \"CodePush\");\n    var platform: string = command.platform = command.platform.toLowerCase();\n    var releaseCommand: cli.IReleaseCommand = <any>command;\n\n    // we have to add \"CodePush\" root forlder to make update contents file structure \n    // to be compatible with React Native client SDK\n    outputFolder = path.join(outputFolder, \"CodePush\");\n    mkdirp.sync(outputFolder);\n\n    // Check for app and deployment exist before releasing an update.\n    // This validation helps to save about 1 minute or more in case user has typed wrong app or deployment name.\n    return validateDeployment(command.appName, command.deploymentName)\n        .then((): any => {\n            releaseCommand.package = outputFolder;\n\n            switch (platform) {\n                case \"android\":\n                case \"ios\":\n                case \"windows\":\n                    if (!bundleName) {\n                        bundleName = platform === \"ios\"\n                            ? \"main.jsbundle\"\n                            : `index.${platform}.bundle`;\n                    }\n\n                    break;\n                default:\n                    throw new Error(\"Platform must be \\\"android\\\", \\\"ios\\\", or \\\"windows\\\".\");\n            }\n\n            try {\n                var projectPackageJson: any = require(path.join(process.cwd(), \"package.json\"));\n                var projectName: string = projectPackageJson.name;\n                if (!projectName) {\n                    throw new Error(\"The \\\"package.json\\\" file in the CWD does not have the \\\"name\\\" field set.\");\n                }\n\n                const isReactNativeProject: boolean = projectPackageJson.dependencies[\"react-native\"] ||\n                    (projectPackageJson.devDependencies && projectPackageJson.devDependencies[\"react-native\"]);\n                if (!isReactNativeProject) {\n                    throw new Error(\"The project in the CWD is not a React Native project.\");\n                }\n            } catch (error) {\n                throw new Error(\"Unable to find or read \\\"package.json\\\" in the CWD. The \\\"release-react\\\" command must be executed in a React Native project folder.\");\n            }\n\n            if (!entryFile) {\n                entryFile = `index.${platform}.js`;\n                if (fileDoesNotExistOrIsDirectory(entryFile)) {\n                    entryFile = \"index.js\";\n                }\n\n                if (fileDoesNotExistOrIsDirectory(entryFile)) {\n                    throw new Error(`Entry file \"index.${platform}.js\" or \"index.js\" does not exist.`);\n                }\n            } else {\n                if (fileDoesNotExistOrIsDirectory(entryFile)) {\n                    throw new Error(`Entry file \"${entryFile}\" does not exist.`);\n                }\n            }\n\n            if (command.appStoreVersion) {\n                throwForInvalidSemverRange(command.appStoreVersion);\n            }\n\n            var appVersionPromise: Promise<string> = command.appStoreVersion\n                ? Q(command.appStoreVersion)\n                : getReactNativeProjectAppVersion(command, projectName);\n\n            if (command.outputDir) {\n                command.sourcemapOutput = path.join(releaseCommand.package, bundleName + \".map\");\n            }\n\n            return appVersionPromise;\n        })\n        .then((appVersion: string) => {\n            releaseCommand.appStoreVersion = appVersion;\n            return createEmptyTempReleaseFolder(outputFolder);\n        })\n        // This is needed to clear the react native bundler cache:\n        // https://github.com/facebook/react-native/issues/4289\n        .then(() => deleteFolder(`${os.tmpdir()}/react-*`))\n        .then(() => runReactNativeBundleCommand(bundleName, command.development || false, entryFile, outputFolder, platform, command.sourcemapOutput, command.config))\n        .then(() => {\n            log(chalk.cyan(\"\\nReleasing update contents to CodePush:\\n\"));\n            return release(releaseCommand);\n        })\n        .then(() => {\n            if (!command.outputDir) {\n                deleteFolder(outputFolder);\n            }\n        })\n        .catch((err: Error) => {\n            deleteFolder(outputFolder);\n            throw err;\n        });\n}\n\nfunction validateDeployment(appName: string, deploymentName: string): Promise<void> {\n    return sdk.getDeployment(appName, deploymentName)\n        .catch((err: any) => {\n            // If we get an error that the deployment doesn't exist (but not the app doesn't exist), then tack on a more descriptive error message telling the user what to do\n            if (err.statusCode === AccountManager.ERROR_NOT_FOUND && err.message.indexOf(\"Deployment\") !== -1) {\n                err.message = err.message + \"\\nUse \\\"code-push deployment list\\\" to view any existing deployments and \\\"code-push deployment add\\\" to add deployment(s) to the app.\";\n            }\n            throw err;\n        });\n}\n\nfunction rollback(command: cli.IRollbackCommand): Promise<void> {\n    return confirm()\n        .then((wasConfirmed: boolean) => {\n            if (!wasConfirmed) {\n                log(\"Rollback cancelled.\")\n                return;\n            }\n\n            return sdk.rollback(command.appName, command.deploymentName, command.targetRelease || undefined)\n                .then((): void => {\n                    log(\"Successfully performed a rollback on the \\\"\" + command.deploymentName + \"\\\" deployment of the \\\"\" + command.appName + \"\\\" app.\");\n                });\n        });\n}\n\nfunction requestAccessKey(): Promise<string> {\n    return Promise<string>((resolve, reject, notify): void => {\n        prompt.message = \"\";\n        prompt.delimiter = \"\";\n\n        prompt.start();\n\n        prompt.get({\n            properties: {\n                response: {\n                    description: chalk.cyan(\"Enter your token from the browser: \")\n                }\n            }\n        }, (err: any, result: any): void => {\n            if (err) {\n                resolve(null);\n            } else {\n                resolve(result.response.trim());\n            }\n        });\n    });\n}\n\nexport var runReactNativeBundleCommand = (bundleName: string, development: boolean, entryFile: string, outputFolder: string, platform: string, sourcemapOutput: string, config: string): Promise<void> => {\n    let reactNativeBundleArgs: string[] = [];\n    let envNodeArgs: string = process.env.CODE_PUSH_NODE_ARGS;\n\n    if (typeof envNodeArgs !== \"undefined\") {\n        Array.prototype.push.apply(reactNativeBundleArgs, envNodeArgs.trim().split(/\\s+/));\n    }\n\n    Array.prototype.push.apply(reactNativeBundleArgs, [\n        path.join(\"node_modules\", \"react-native\", \"local-cli\", \"cli.js\"), \"bundle\",\n        \"--assets-dest\", outputFolder,\n        \"--bundle-output\", path.join(outputFolder, bundleName),\n        \"--dev\", development,\n        \"--entry-file\", entryFile,\n        \"--platform\", platform,\n    ]);\n\n    if (sourcemapOutput) {\n        reactNativeBundleArgs.push(\"--sourcemap-output\", sourcemapOutput);\n    }\n\n    if (config) {\n        reactNativeBundleArgs.push(\"--config\", config);\n    }\n\n    log(chalk.cyan(\"Running \\\"react-native bundle\\\" command:\\n\"));\n    var reactNativeBundleProcess = spawn(\"node\", reactNativeBundleArgs);\n    log(`node ${reactNativeBundleArgs.join(\" \")}`);\n\n    return Promise<void>((resolve, reject, notify) => {\n        reactNativeBundleProcess.stdout.on(\"data\", (data: Buffer) => {\n            log(data.toString().trim());\n        });\n\n        reactNativeBundleProcess.stderr.on(\"data\", (data: Buffer) => {\n            console.error(data.toString().trim());\n        });\n\n        reactNativeBundleProcess.on(\"close\", (exitCode: number) => {\n            if (exitCode) {\n                reject(new Error(`\"react-native bundle\" command exited with code ${exitCode}.`));\n            }\n\n            resolve(<void>null);\n        });\n    });\n}\n\nfunction serializeConnectionInfo(accessKey: string, preserveAccessKeyOnLogout: boolean, customServerUrl?: string, proxy?: string, noProxy?: boolean): void {\n    var connectionInfo: ILoginConnectionInfo = { accessKey: accessKey, preserveAccessKeyOnLogout: preserveAccessKeyOnLogout, proxy: proxy, noProxy: noProxy };\n    if (customServerUrl) {\n        connectionInfo.customServerUrl = customServerUrl;\n    }\n\n    var json: string = JSON.stringify(connectionInfo);\n    fs.writeFileSync(configFilePath, json, { encoding: \"utf8\" });\n\n    log(`\\r\\nSuccessfully logged-in. Your session file was written to ${chalk.cyan(configFilePath)}. You can run the ${chalk.cyan(\"code-push logout\")} command at any time to delete this file and terminate your session.\\r\\n`);\n}\n\nfunction sessionList(command: cli.ISessionListCommand): Promise<void> {\n    throwForInvalidOutputFormat(command.format);\n\n    return sdk.getSessions()\n        .then((sessions: Session[]): void => {\n            printSessions(command.format, sessions);\n        });\n}\n\nfunction sessionRemove(command: cli.ISessionRemoveCommand): Promise<void> {\n    if (os.hostname() === command.machineName) {\n        throw new Error(\"Cannot remove the current login session via this command. Please run 'code-push logout' instead.\");\n    } else {\n        return confirm()\n            .then((wasConfirmed: boolean): Promise<void> => {\n                if (wasConfirmed) {\n                    return sdk.removeSession(command.machineName)\n                        .then((): void => {\n                            log(`Successfully removed the login session for \"${command.machineName}\".`);\n                        });\n                }\n\n                log(\"Session removal cancelled.\");\n            });\n    }\n}\n\nfunction releaseErrorHandler(error: CodePushError, command: cli.ICommand): void {\n    if ((<any>command).noDuplicateReleaseError && error.statusCode === AccountManager.ERROR_CONFLICT) {\n        console.warn(chalk.yellow(\"[Warning] \" + error.message));\n    } else {\n        throw error;\n    }\n}\n\nfunction isBinaryOrZip(path: string): boolean {\n    return path.search(/\\.zip$/i) !== -1\n        || path.search(/\\.apk$/i) !== -1\n        || path.search(/\\.ipa$/i) !== -1;\n}\n\nfunction throwForInvalidEmail(email: string): void {\n    if (!emailValidator.validate(email)) {\n        throw new Error(\"\\\"\" + email + \"\\\" is an invalid e-mail address.\");\n    }\n}\n\nfunction throwForInvalidSemverRange(semverRange: string): void {\n    if (semver.validRange(semverRange) === null) {\n        throw new Error(\"Please use a semver-compliant target binary version range, for example \\\"1.0.0\\\", \\\"*\\\" or \\\"^1.2.3\\\".\");\n    }\n}\n\nfunction throwForInvalidOutputFormat(format: string): void {\n    switch (format) {\n        case \"json\":\n        case \"table\":\n            break;\n\n        default:\n            throw new Error(\"Invalid format:  \" + format + \".\");\n    }\n}\n\nfunction whoami(command: cli.ICommand): Promise<void> {\n    return sdk.getAccountInfo()\n        .then((account): void => {\n            var accountInfo = `${account.email}`;\n\n            var connectionInfo = deserializeConnectionInfo();\n            if (connectionInfo.noProxy || connectionInfo.proxy) {\n                log(chalk.green('Account: ') + accountInfo);\n\n                var proxyInfo = chalk.green('Proxy: ') + (connectionInfo.noProxy ? 'Ignored' : connectionInfo.proxy);\n                log(proxyInfo);\n            } else {\n                log(accountInfo);\n            }\n        });\n}\n\nfunction getProxy(proxy?: string, noProxy?: boolean): string {\n    if (noProxy) return null;\n    if (!proxy) return process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\n    else return proxy;\n}\n\nfunction isCommandOptionSpecified(option: any): boolean {\n    return option !== undefined && option !== null;\n}\n\nfunction getSdk(accessKey: string, headers: Headers, customServerUrl: string, proxy: string): AccountManager {\n    var sdk: any = new AccountManager(accessKey, CLI_HEADERS, customServerUrl, proxy);\n    /*\n     * If the server returns `Unauthorized`, it must be due to an invalid\n     * (or expired) access key. For convenience, we patch every SDK call\n     * to delete the cached connection so the user can simply\n     * login again instead of having to log out first.\n     */\n    Object.getOwnPropertyNames(AccountManager.prototype).forEach((functionName: any) => {\n        if (typeof sdk[functionName] === \"function\") {\n            var originalFunction = sdk[functionName];\n            sdk[functionName] = function () {\n                var maybePromise: Promise<any> = originalFunction.apply(sdk, arguments);\n                if (maybePromise && maybePromise.then !== undefined) {\n                    maybePromise = maybePromise\n                        .catch((error: any) => {\n                            if (error.statusCode && error.statusCode === AccountManager.ERROR_UNAUTHORIZED) {\n                                deleteConnectionInfoCache(/* printMessage */ false);\n                            }\n\n                            throw error;\n                        });\n                }\n\n                return maybePromise;\n            };\n        }\n    });\n\n    return sdk;\n}\n"],"sourceRoot":"../.."}