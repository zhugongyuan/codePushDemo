{"version":3,"sources":["script/cli.ts"],"names":["run"],"mappings":"AAAA,+DAA+D;AAG/D,IAAY,MAAM,WAAM,kBAAkB,CAAC,CAAA;AAC3C,iCAAwB,oBAAoB,CAAC,CAAA;AAC7C,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B;IACIA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,OAAOA,CAACA,CAACA,CAACA;QAClBA,MAAMA,CAACA,QAAQA,CAAwBA,KAAKA,CAACA,CAACA;QAC9CA,MAAMA,CAACA;IACXA,CAACA;IAEDA,0BAAOA,CAACA,MAAMA,CAACA,OAAOA,CAACA;SAClBA,KAAKA,CAACA,UAACA,KAAUA;QACdA,OAAOA,CAACA,KAAKA,CAACA,KAAKA,CAACA,GAAGA,CAACA,WAAWA,GAAGA,KAAKA,CAACA,OAAOA,CAACA,CAACA,CAACA;QACtDA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;IACpBA,CAACA,CAACA;SACDA,IAAIA,EAAEA,CAACA;AAChBA,CAACA;AAED,GAAG,EAAE,CAAC","file":"cli.js","sourcesContent":["/// <reference path=\"../definitions/external/node/node.d.ts\" />\n\nimport { Promise } from \"q\";\nimport * as parser from \"./command-parser\";\nimport { execute } from \"./command-executor\";\nimport * as chalk from \"chalk\";\n\nfunction run(): void {\n    if (!parser.command) {\n        parser.showHelp(/*showRootDescription*/false);\n        return;\n    }\n\n    execute(parser.command)\n        .catch((error: any): void => {\n            console.error(chalk.red(\"[Error]  \" + error.message));\n            process.exit(1);\n        })\n        .done();\n}\n\nrun();\n"],"sourceRoot":"../.."}