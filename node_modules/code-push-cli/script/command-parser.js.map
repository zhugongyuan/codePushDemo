{"version":3,"sources":["script/command-parser.ts"],"names":["showHelp","updateCheck","accessKeyAdd","accessKeyPatch","accessKeyList","accessKeyRemove","addCommonConfiguration","appList","appRemove","listCollaborators","removeCollaborator","sessionList","sessionRemove","deploymentHistoryClear","deploymentList","deploymentRemove","deploymentHistory","createCommand","isValidRollout","checkValidReleaseOptions","getRolloutValue","getServerUrl","isDefined","parseDurationMilliseconds"],"mappings":"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","file":"command-parser.js","sourcesContent":["import * as yargs from \"yargs\";\nimport * as cli from \"../definitions/cli\";\nimport * as chalk from \"chalk\";\nimport * as updateNotifier from \"update-notifier\";\nimport backslash = require(\"backslash\");\nimport parseDuration = require(\"parse-duration\");\n\nvar packageJson = require(\"../package.json\");\nconst ROLLOUT_PERCENTAGE_REGEX: RegExp = /^(100|[1-9][0-9]|[1-9])%?$/;\nconst USAGE_PREFIX = \"Usage: code-push\";\n\n// Command categories are:  access-key, app, release, deployment, deployment-key, login, logout, register\nvar isValidCommandCategory = false;\n// Commands are the verb following the command category (e.g.:  \"add\" in \"app add\").\nvar isValidCommand = false;\nvar wasHelpShown = false;\n\nexport function showHelp(showRootDescription?: boolean): void {\n    if (!wasHelpShown) {\n        if (showRootDescription) {\n            console.log(chalk.cyan(\"  _____        __  \" + chalk.green(\"  ___           __ \")));\n            console.log(chalk.cyan(\" / ___/__  ___/ /__\" + chalk.green(\" / _ \\\\__ _____ / / \")));\n            console.log(chalk.cyan(\"/ /__/ _ \\\\/ _  / -_)\" + chalk.green(\" ___/ // (_-</ _ \\\\\")));\n            console.log(chalk.cyan(\"\\\\___/\\\\___/\\\\_,_/\\\\__/\" + chalk.green(\"_/   \\\\_,_/___/_//_/\")) + \"    CLI v\" + packageJson.version);\n            console.log(chalk.cyan(\"======================================\"));\n            console.log(\"\");\n            console.log(\"Mobile Center CodePush is a service that enables you to deploy mobile app updates directly to your users' devices.\\n\");\n            updateCheck();\n        }\n\n        yargs.showHelp();\n        wasHelpShown = true;\n    }\n}\n\nfunction updateCheck(): void {\n    var notifier: updateNotifier.IResult = updateNotifier({ pkg: packageJson });\n    if (notifier.update) {\n        notifier.notify();\n    }\n}\n\nfunction accessKeyAdd(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" access-key \" + commandName + \" <accessKeyName>\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"access-key \" + commandName + \" \\\"VSTS Integration\\\"\", \"Creates a new access key with the name \\\"VSTS Integration\\\"\")\n        //.example(\"access-key \" + commandName + \" \\\"One time key\\\" --ttl 5m\", \"Creates a new access key with the name \\\"One time key\\\", which expires in 5 minutes\")\n        //.option(\"ttl\", { default: \"60d\", demand: false, description: \"Duration string which specifies the amount of time that the access key should remain valid for (e.g 5m, 60d, 1y)\", type: \"string\" });\n\n    addCommonConfiguration(yargs);\n}\n\nfunction accessKeyPatch(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" access-key \" + commandName + \" <accessKeyName>\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"access-key \" + commandName + \" \\\"Key for build server\\\" --name \\\"Key for CI machine\\\"\", \"Renames the access key named \\\"Key for build server\\\" to \\\"Key for CI machine\\\"\")\n        .example(\"access-key \" + commandName + \" \\\"Key for build server\\\" --ttl 7d\", \"Updates the access key named \\\"Key for build server\\\" to expire in 7 days\")\n        .option(\"name\", { default: null, demand: false, description: \"Display name for the access key\", type: \"string\" })\n        .option(\"ttl\", { default: null, demand: false, description: \"Duration string which specifies the amount of time that the access key should remain valid for (e.g 5m, 60d, 1y)\", type: \"string\" });\n    addCommonConfiguration(yargs);\n}\n\nfunction accessKeyList(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" access-key \" + commandName + \" [options]\")\n        .demand(/*count*/ 0, /*max*/ 0)  \n        .example(\"access-key \" + commandName, \"Lists your access keys in tabular format\")\n        .example(\"access-key \" + commandName + \" --format json\", \"Lists your access keys in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display your access keys with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" });\n\n    addCommonConfiguration(yargs);\n}\n\nfunction accessKeyRemove(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" access-key \" + commandName + \" <accessKeyName>\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"access-key \" + commandName + \" \\\"VSTS Integration\\\"\", \"Removes the \\\"VSTS Integration\\\" access key\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction addCommonConfiguration(yargs: yargs.Argv): void {\n    yargs.wrap(/*columnLimit*/ null)\n        .string(\"_\")                         // Interpret non-hyphenated arguments as strings (e.g. an app version of '1.10').\n        .strict()                            // Validate hyphenated (named) arguments.\n        .fail((msg: string) => showHelp());  // Suppress the default error message.\n}\n\nfunction appList(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" app \" + commandName + \" [options]\")\n        .demand(/*count*/ 0, /*max*/ 0)  \n        .example(\"app \" + commandName, \"List your apps in tabular format\")\n        .example(\"app \" + commandName + \" --format json\", \"List your apps in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display your apps with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" });\n\n    addCommonConfiguration(yargs);\n}\n\nfunction appRemove(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" app \" + commandName + \" <appName>\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"app \" + commandName + \" MyApp\", \"Removes app \\\"MyApp\\\"\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction listCollaborators(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" collaborator \" + commandName + \" <appName> [options]\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"collaborator \" + commandName + \" MyApp\", \"Lists the collaborators for app \\\"MyApp\\\" in tabular format\")\n        .example(\"collaborator \" + commandName + \" MyApp --format json\", \"Lists the collaborators for app \\\"MyApp\\\" in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display collaborators with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" });\n\n    addCommonConfiguration(yargs);\n}\n\nfunction removeCollaborator(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" collaborator \" + commandName + \" <appName> <email>\")\n        .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n        .example(\"collaborator \" + commandName + \" MyApp foo@bar.com\", \"Removes foo@bar.com as a collaborator from app \\\"MyApp\\\"\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction sessionList(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" session \" + commandName + \" [options]\")\n        .demand(/*count*/ 0, /*max*/ 0)  \n        .example(\"session \" + commandName, \"Lists your sessions in tabular format\")\n        .example(\"session \" + commandName + \" --format json\", \"Lists your login sessions in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display your login sessions with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" });\n\n    addCommonConfiguration(yargs);\n}\n\nfunction sessionRemove(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" session \" + commandName + \" <machineName>\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"session \" + commandName + \" \\\"John's PC\\\"\", \"Removes the existing login session from \\\"John's PC\\\"\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction deploymentHistoryClear(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" deployment \" + commandName + \" <appName> <deploymentName>\")\n        .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n        .example(\"deployment \" + commandName + \" MyApp MyDeployment\", \"Clears the release history associated with deployment \\\"MyDeployment\\\" from app \\\"MyApp\\\"\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction deploymentList(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" deployment \" + commandName + \" <appName> [options]\")\n        .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option arguments\n        .example(\"deployment \" + commandName + \" MyApp\", \"Lists the deployments for app \\\"MyApp\\\" in tabular format\")\n        .example(\"deployment \" + commandName + \" MyApp --format json\", \"Lists the deployments for app \\\"MyApp\\\" in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display your deployments with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" })\n        .option(\"displayKeys\", { alias: \"k\", default: false, demand: false, description: \"Specifies whether to display the deployment keys\", type: \"boolean\" });\n    addCommonConfiguration(yargs);\n}\n\nfunction deploymentRemove(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" deployment \" + commandName + \" <appName> <deploymentName>\")\n        .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n        .example(\"deployment \" + commandName + \" MyApp MyDeployment\", \"Removes deployment \\\"MyDeployment\\\" from app \\\"MyApp\\\"\");\n\n    addCommonConfiguration(yargs);\n}\n\nfunction deploymentHistory(commandName: string, yargs: yargs.Argv): void {\n    isValidCommand = true;\n    yargs.usage(USAGE_PREFIX + \" deployment \" + commandName + \" <appName> <deploymentName> [options]\")\n        .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n        .example(\"deployment \" + commandName + \" MyApp MyDeployment\", \"Displays the release history for deployment \\\"MyDeployment\\\" from app \\\"MyApp\\\" in tabular format\")\n        .example(\"deployment \" + commandName + \" MyApp MyDeployment --format json\", \"Displays the release history for deployment \\\"MyDeployment\\\" from app \\\"MyApp\\\" in JSON format\")\n        .option(\"format\", { default: \"table\", demand: false, description: \"Output format to display the release history with (\\\"json\\\" or \\\"table\\\")\", type: \"string\" })\n        .option(\"displayAuthor\", { alias: \"a\", default: false, demand: false, description: \"Specifies whether to display the release author\", type: \"boolean\" });\n\n    addCommonConfiguration(yargs);\n}\n\nvar argv = yargs.usage(USAGE_PREFIX + \" <command>\")\n    .demand(/*count*/ 1, /*max*/ 1)  // Require exactly one non-option argument.\n    .command(\"access-key\", \"View and manage the access keys associated with your account\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        yargs.usage(USAGE_PREFIX + \" access-key <command>\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments.\n            .command(\"add\", \"Create a new access key associated with your account\", (yargs: yargs.Argv) => accessKeyAdd(\"add\", yargs))\n            // Mobile Center doesn't support renaming access keys or changing their TTL (which never expire), so we no longer support patch\n            /*\n            .command(\"patch\", \"Update the name and/or TTL of an existing access key\", (yargs: yargs.Argv) => accessKeyPatch(\"patch\", yargs))\n            */\n            .command(\"remove\", \"Remove an existing access key\", (yargs: yargs.Argv) => accessKeyRemove(\"remove\", yargs))\n            .command(\"rm\", \"Remove an existing access key\", (yargs: yargs.Argv) => accessKeyRemove(\"rm\", yargs))\n            .command(\"list\", \"List the access keys associated with your account\", (yargs: yargs.Argv) => accessKeyList(\"list\", yargs))\n            .command(\"ls\", \"List the access keys associated with your account\", (yargs: yargs.Argv) => accessKeyList(\"ls\", yargs))\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"app\", \"View and manage your CodePush apps\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        yargs.usage(USAGE_PREFIX + \" app <command>\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments.\n            .command(\"add\", \"Add a new app to your account\", (yargs: yargs.Argv): void => {\n                isValidCommand = true;\n                yargs.usage(USAGE_PREFIX + \" app add <appName> <os> <platform>\")\n                    .demand(/*count*/ 3, /*max*/ 3)  // Require exactly three non-option arguments\n                    .example(\"app add MyApp ios react-native\", \"Adds app \\\"MyApp\\\", indicating that it's an iOS React Native app\")\n                    .example(\"app add MyApp windows react-native\", \"Adds app \\\"MyApp\\\", indicating that it's a Windows React Native app\")\n                    .example(\"app add MyApp android cordova\", \"Adds app \\\"MyApp\\\", indicating that it's an Android Cordova app\");\n\n                addCommonConfiguration(yargs);\n            })\n            .command(\"remove\", \"Remove an app from your account\", (yargs: yargs.Argv) => appRemove(\"remove\", yargs))\n            .command(\"rm\", \"Remove an app from your account\", (yargs: yargs.Argv) => appRemove(\"rm\", yargs))\n            .command(\"rename\", \"Rename an existing app\", (yargs: yargs.Argv) => {\n                isValidCommand = true;\n                yargs.usage(USAGE_PREFIX + \" app rename <currentAppName> <newAppName>\")\n                    .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n                    .example(\"app rename CurrentName NewName\", \"Renames app \\\"CurrentName\\\" to \\\"NewName\\\"\");\n\n                addCommonConfiguration(yargs);\n            })\n            .command(\"list\", \"Lists the apps associated with your account\", (yargs: yargs.Argv) => appList(\"list\", yargs))\n            .command(\"ls\", \"Lists the apps associated with your account\", (yargs: yargs.Argv) => appList(\"ls\", yargs))\n            /*\n            .command(\"transfer\", \"Transfer the ownership of an app to another account\", (yargs: yargs.Argv) => {\n                yargs.usage(USAGE_PREFIX + \" app transfer <appName> <email>\")\n                    .demand(2, 2)  // Require exactly two non-option arguments\n                    .example(\"app transfer MyApp foo@bar.com\", \"Transfers the ownership of app \\\"MyApp\\\" to an account with email \\\"foo@bar.com\\\"\");\n\n                addCommonConfiguration(yargs);\n            })\n            */\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"collaborator\", \"View and manage app collaborators\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        yargs.usage(USAGE_PREFIX + \" collaborator <command>\")\n            .demand(2, 2)  // Require exactly two non-option arguments.\n            .command(\"add\", \"Add a new collaborator to an app\", (yargs: yargs.Argv): void => {\n                isValidCommand = true;\n                yargs.usage(USAGE_PREFIX + \" collaborator add <appName> <email>\")\n                    .demand(2, 2)  // Require exactly two non-option arguments\n                    .example(\"collaborator add MyApp foo@bar.com\", \"Adds foo@bar.com as a collaborator to app \\\"MyApp\\\"\");\n\n                addCommonConfiguration(yargs);\n            })\n            .command(\"remove\", \"Remove a collaborator from an app\", (yargs: yargs.Argv) => removeCollaborator(\"remove\", yargs))\n            .command(\"rm\", \"Remove a collaborator from an app\", (yargs: yargs.Argv) => removeCollaborator(\"rm\", yargs))\n            .command(\"list\", \"List the collaborators for an app\", (yargs: yargs.Argv) => listCollaborators(\"list\", yargs))\n            .command(\"ls\", \"List the collaborators for an app\", (yargs: yargs.Argv) => listCollaborators(\"ls\", yargs))\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"debug\", \"View the CodePush debug logs for a running app\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" debug <platform>\")\n            .demand(/*count*/ 1, /*max*/ 1) // Require exactly one non-option arguments\n            .example(\"debug android\", \"View the CodePush debug logs for an Android emulator or device\")\n            .example(\"debug ios\", \"View the CodePush debug logs for the iOS simulator\");\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"deployment\", \"View and manage your app deployments\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        yargs.usage(USAGE_PREFIX + \" deployment <command>\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments.\n            .command(\"add\", \"Add a new deployment to an app\", (yargs: yargs.Argv): void => {\n                isValidCommand = true;\n                yargs.usage(USAGE_PREFIX + \" deployment add <appName> [deploymentName]\")\n                    .demand(/*count*/ 1, /*max*/ 2)  // Require the app name, with deploymentName optional (either deploymentName or --default needs to be specified)\n                    .option(\"default\", { alias: \"d\", demand: false, description: \"Add the default \\\"Staging\\\" and \\\"Production\\\" deployments\",  type: \"boolean\" })\n                    .example(\"deployment add MyApp --default\", \"Adds default \\\"Staging\\\" and \\\"Production\\\" deployments to app \\\"MyApp\\\"\")\n                    .example(\"deployment add MyApp MyDeployment\", \"Adds deployment \\\"MyDeployment\\\" to app \\\"MyApp\\\"\");\n\n                addCommonConfiguration(yargs);\n            })\n            .command(\"clear\", \"Clear the release history associated with a deployment\", (yargs: yargs.Argv) => deploymentHistoryClear(\"clear\", yargs))\n            .command(\"remove\", \"Remove a deployment from an app\", (yargs: yargs.Argv) => deploymentRemove(\"remove\", yargs))\n            .command(\"rm\", \"Remove a deployment from an app\", (yargs: yargs.Argv) => deploymentRemove(\"rm\", yargs))\n            .command(\"rename\", \"Rename an existing deployment\", (yargs: yargs.Argv) => {\n                isValidCommand = true;\n                yargs.usage(USAGE_PREFIX + \" deployment rename <appName> <currentDeploymentName> <newDeploymentName>\")\n                    .demand(/*count*/ 3, /*max*/ 3)  // Require exactly three non-option arguments\n                    .example(\"deployment rename MyApp CurrentDeploymentName NewDeploymentName\", \"Renames deployment \\\"CurrentDeploymentName\\\" to \\\"NewDeploymentName\\\"\");\n\n                addCommonConfiguration(yargs);\n            })\n            .command(\"list\", \"List the deployments associated with an app\", (yargs: yargs.Argv) => deploymentList(\"list\", yargs))\n            .command(\"ls\", \"List the deployments associated with an app\", (yargs: yargs.Argv) => deploymentList(\"ls\", yargs))\n            .command(\"history\", \"Display the release history for a deployment\", (yargs: yargs.Argv) => deploymentHistory(\"history\", yargs))\n            .command(\"h\", \"Display the release history for a deployment\", (yargs: yargs.Argv) => deploymentHistory(\"h\", yargs))\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"link\", \"Link an additional authentication provider (e.g. GitHub) to an existing Mobile Center account\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" link\")\n            .demand(/*count*/ 0, /*max*/ 1)  //set 'max' to one to allow usage of serverUrl undocument parameter for testing\n            .example(\"link\", \"Links an account on the Mobile Center server\")\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"login\", \"Authenticate in order to begin managing your apps\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" login [options]\")\n            .demand(/*count*/ 0, /*max*/ 1)  //set 'max' to one to allow usage of serverUrl undocument parameter for testing\n            .example(\"login\", \"Logs in to the Mobile Center server\")\n            .example(\"login --accessKey mykey\", \"Logs in on behalf of the user who owns and created the access key \\\"mykey\\\"\")\n            .example(\"login --proxy http://someproxy.com:455\", \"Logs in with the specified proxy url\")\n            .option(\"accessKey\", { alias: \"key\", default: null, demand: false, description: \"Access key to authenticate against the Mobile Center server with, instead of providing your username and password credentials\", type: \"string\" })\n            .option(\"proxy\", { default: null, demand: false, description: \"URL of the proxy server to use\", type: \"string\" })\n            .option(\"noProxy\", { default: false, demand: false, description: \"Bypass the system-wide proxy settings\", type: \"boolean\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"logout\", \"Log out of the current session\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" logout\")\n            .demand(/*count*/ 0, /*max*/ 0) \n            .example(\"logout\", \"Logs out and ends your current session\");\n        addCommonConfiguration(yargs);\n    })\n    .command(\"patch\", \"Update the metadata for an existing release\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" patch <appName> <deploymentName> [options]\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n            .example(\"patch MyApp Production --des \\\"Updated description\\\" -r 50%\", \"Updates the description of the latest release for \\\"MyApp\\\" app's \\\"Production\\\" deployment and updates the rollout value to 50%\")\n            .example(\"patch MyApp Production -l v3 --des \\\"Updated description for v3\\\"\", \"Updates the description of the release with label v3 for \\\"MyApp\\\" app's \\\"Production\\\" deployment\")\n            .option(\"label\", { alias: \"l\", default: null, demand: false, description: \"Label of the release to update. Defaults to the latest release within the specified deployment\", type: \"string\" })\n            .option(\"description\", { alias: \"des\", default: null, demand: false, description: \"Description of the changes made to the app with this release\", type: \"string\" })\n            .option(\"disabled\", { alias: \"x\", default: null, demand: false, description: \"Specifies whether this release should be immediately downloadable\", type: \"boolean\" })\n            .option(\"mandatory\", { alias: \"m\", default: null, demand: false, description: \"Specifies whether this release should be considered mandatory\", type: \"boolean\" })\n            .option(\"rollout\", { alias: \"r\", default: null, demand: false, description: \"Percentage of users this release should be immediately available to. This attribute can only be increased from the current value.\", type: \"string\" })\n            .option(\"targetBinaryVersion\", { alias: \"t\", default: null, demand: false, description: \"Semver expression that specifies the binary app version(s) this release is targeting (e.g. 1.1.0, ~1.2.3).\", type: \"string\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => { return isValidRollout(argv); });\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"promote\", \"Promote the latest release from one app deployment to another\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" promote <appName> <sourceDeploymentName> <destDeploymentName> [options]\")\n            .demand(/*count*/ 3, /*max*/ 3)  // Require exactly three non-option arguments\n            .example(\"promote MyApp Staging Production\", \"Promotes the latest release within the \\\"Staging\\\" deployment of \\\"MyApp\\\" to \\\"Production\\\"\")\n            .example(\"promote MyApp Staging Production --des \\\"Production rollout\\\" -r 25\", \"Promotes the latest release within the \\\"Staging\\\" deployment of \\\"MyApp\\\" to \\\"Production\\\", with an updated description, and targeting only 25% of the users\")\n            .option(\"description\", { alias: \"des\", default: null, demand: false, description: \"Description of the changes made to the app with this release. If omitted, the description from the release being promoted will be used.\", type: \"string\" })\n            .option(\"label\", { alias: \"l\", default: null, demand: false, description: \"Label of the source release that will be taken. If omitted, the latest release being promoted will be used.\", type: \"string\" })\n            .option(\"disabled\", { alias: \"x\", default: null, demand: false, description: \"Specifies whether this release should be immediately downloadable. If omitted, the disabled attribute from the release being promoted will be used.\", type: \"boolean\" })\n            .option(\"mandatory\", { alias: \"m\", default: null, demand: false, description: \"Specifies whether this release should be considered mandatory. If omitted, the mandatory property from the release being promoted will be used.\", type: \"boolean\" })\n            .option(\"noDuplicateReleaseError\", { default: false, demand: false, description: \"When this flag is set, promoting a package that is identical to the latest release on the target deployment will produce a warning instead of an error\", type: \"boolean\" })\n            .option(\"rollout\", { alias: \"r\", default: \"100%\", demand: false, description: \"Percentage of users this update should be immediately available to\", type: \"string\" })\n            .option(\"targetBinaryVersion\", { alias: \"t\", default: null, demand: false, description: \"Semver expression that specifies the binary app version(s) this release is targeting (e.g. 1.1.0, ~1.2.3). If omitted, the target binary version property from the release being promoted will be used.\", type: \"string\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => { return isValidRollout(argv); });\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"register\", \"Register a new Mobile Center account\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" register\")\n            .demand(/*count*/ 0, /*max*/ 1)  //set 'max' to one to allow usage of serverUrl undocument parameter for testing\n            .example(\"register\", \"Registers a new Mobile Center account\")\n            .example(\"register --proxy http://someproxy.com:455\", \"Registers with the specified proxy url\")\n            .option(\"proxy\", { default: null, demand: false, description: \"URL of the proxy server to use\", type: \"string\" })\n            .option(\"noProxy\", { default: false, demand: false, description: \"Bypass the system-wide proxy settings\", type: \"boolean\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"release\", \"Release an update to an app deployment\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" release <appName> <updateContentsPath> <targetBinaryVersion> [options]\")\n            .demand(/*count*/ 3, /*max*/ 3)  // Require exactly three non-option arguments.\n            .example(\"release MyApp app.js \\\"*\\\"\", \"Releases the \\\"app.js\\\" file to the \\\"MyApp\\\" app's \\\"Staging\\\" deployment, targeting any binary version using the \\\"*\\\" wildcard range syntax.\")\n            .example(\"release MyApp ./platforms/ios/www 1.0.3 -d Production -k ~/.ssh/codepush_rsa\", \"Releases the \\\"./platforms/ios/www\\\" folder and all its contents to the \\\"MyApp\\\" app's \\\"Production\\\" deployment, targeting only the 1.0.3 binary version and signed with the \\\"codepush_rsa\\\" private key\")\n            .example(\"release MyApp ./platforms/ios/www 1.0.3 -d Production -r 20\", \"Releases the \\\"./platforms/ios/www\\\" folder and all its contents to the \\\"MyApp\\\" app's \\\"Production\\\" deployment, targeting the 1.0.3 binary version and rolling out to about 20% of the users\")\n            .option(\"deploymentName\", { alias: \"d\", default: \"Staging\", demand: false, description: \"Deployment to release the update to\", type: \"string\" })\n            .option(\"description\", { alias: \"des\", default: null, demand: false, description: \"Description of the changes made to the app in this release\", type: \"string\" })\n            .option(\"disabled\", { alias: \"x\", default: false, demand: false, description: \"Specifies whether this release should be immediately downloadable\", type: \"boolean\" })\n            .option(\"mandatory\", { alias: \"m\", default: false, demand: false, description: \"Specifies whether this release should be considered mandatory\", type: \"boolean\" })\n            .option(\"privateKeyPath\", { alias: \"k\", default: false, demand: false, description: \"Specifies the location of a RSA private key to sign the release with\", type: \"string\" })\n            .option(\"noDuplicateReleaseError\", { default: false, demand: false, description: \"When this flag is set, releasing a package that is identical to the latest release will produce a warning instead of an error\", type: \"boolean\" })\n            .option(\"rollout\", { alias: \"r\", default: \"100%\", demand: false, description: \"Percentage of users this release should be available to\", type: \"string\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => { return checkValidReleaseOptions(argv); });\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"release-cordova\", \"Release a Cordova update to an app deployment\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" release-cordova <appName> <platform> [options]\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n            .example(\"release-cordova MyApp ios\", \"Releases the Cordova iOS project in the current working directory to the \\\"MyApp\\\" app's \\\"Staging\\\" deployment\")\n            .example(\"release-cordova MyApp android -d Production\", \"Releases the Cordova Android project in the current working directory to the \\\"MyApp\\\" app's \\\"Production\\\" deployment\")\n            .option(\"build\", { alias: \"b\", default: false, demand: false, description: \"Invoke \\\"cordova build\\\" instead of \\\"cordova prepare\\\"\", type: \"boolean\" })\n            .option(\"isReleaseBuildType\", { alias: \"rb\", default: false, demand: false, description: \"If \\\"build\\\" option is true specifies whether perform a release build\", type: \"boolean\" })\n            .option(\"deploymentName\", { alias: \"d\", default: \"Staging\", demand: false, description: \"Deployment to release the update to\", type: \"string\" })\n            .option(\"description\", { alias: \"des\", default: null, demand: false, description: \"Description of the changes made to the app in this release\", type: \"string\" })\n            .option(\"disabled\", { alias: \"x\", default: false, demand: false, description: \"Specifies whether this release should be immediately downloadable\", type: \"boolean\" })\n            .option(\"mandatory\", { alias: \"m\", default: false, demand: false, description: \"Specifies whether this release should be considered mandatory\", type: \"boolean\" })\n            .option(\"privateKeyPath\", { alias: \"k\", default: false, demand: false, description: \"Specifies the location of a RSA private key to sign the release with\", type: \"string\" })\n            .option(\"noDuplicateReleaseError\", { default: false, demand: false, description: \"When this flag is set, releasing a package that is identical to the latest release will produce a warning instead of an error\", type: \"boolean\" })\n            .option(\"rollout\", { alias: \"r\", default: \"100%\", demand: false, description: \"Percentage of users this release should be immediately available to\", type: \"string\" })\n            .option(\"targetBinaryVersion\", { alias: \"t\", default: null, demand: false, description: \"Semver expression that specifies the binary app version(s) this release is targeting (e.g. 1.1.0, ~1.2.3). If omitted, the release will target the exact version specified in the config.xml file.\", type: \"string\" })\n            .check((argv: any, aliases: { [aliases: string]: string }): any => { return checkValidReleaseOptions(argv); });\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"release-react\", \"Release a React Native update to an app deployment\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" release-react <appName> <platform> [options]\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n            .example(\"release-react MyApp ios\", \"Releases the React Native iOS project in the current working directory to the \\\"MyApp\\\" app's \\\"Staging\\\" deployment\")\n            .example(\"release-react MyApp android -d Production -k ~/.ssh/codepush_rsa\", \"Releases the React Native Android project in the current working directory to the \\\"MyApp\\\" app's \\\"Production\\\" deployment, signed with the \\\"codepush_rsa\\\" private key\")\n            .example(\"release-react MyApp windows --dev\", \"Releases the development bundle of the React Native Windows project in the current working directory to the \\\"MyApp\\\" app's \\\"Staging\\\" deployment\")\n            .option(\"bundleName\", { alias: \"b\", default: null, demand: false, description: \"Name of the generated JS bundle file. If unspecified, the standard bundle name will be used, depending on the specified platform: \\\"main.jsbundle\\\" (iOS), \\\"index.android.bundle\\\" (Android) or \\\"index.windows.bundle\\\" (Windows)\", type: \"string\" })\n            .option(\"deploymentName\", { alias: \"d\", default: \"Staging\", demand: false, description: \"Deployment to release the update to\", type: \"string\" })\n            .option(\"description\", { alias: \"des\", default: null, demand: false, description: \"Description of the changes made to the app with this release\", type: \"string\" })\n            .option(\"development\", { alias: \"dev\", default: false, demand: false, description: \"Specifies whether to generate a dev or release build\", type: \"boolean\" })\n            .option(\"disabled\", { alias: \"x\", default: false, demand: false, description: \"Specifies whether this release should be immediately downloadable\", type: \"boolean\" })\n            .option(\"entryFile\", { alias: \"e\", default: null, demand: false, description: \"Path to the app's entry Javascript file. If omitted, \\\"index.<platform>.js\\\" and then \\\"index.js\\\" will be used (if they exist)\", type: \"string\" })\n            .option(\"gradleFile\", { alias: \"g\", default: null, demand: false, description: \"Path to the gradle file which specifies the binary version you want to target this release at (android only).\" })\n            .option(\"mandatory\", { alias: \"m\", default: false, demand: false, description: \"Specifies whether this release should be considered mandatory\", type: \"boolean\" })\n            .option(\"noDuplicateReleaseError\", { default: false, demand: false, description: \"When this flag is set, releasing a package that is identical to the latest release will produce a warning instead of an error\", type: \"boolean\" })\n            .option(\"plistFile\", { alias: \"p\", default: null, demand: false, description: \"Path to the plist file which specifies the binary version you want to target this release at (iOS only).\" })\n            .option(\"plistFilePrefix\", { alias: \"pre\", default: null, demand: false, description: \"Prefix to append to the file name when attempting to find your app's Info.plist file (iOS only).\" })\n            .option(\"rollout\", { alias: \"r\", default: \"100%\", demand: false, description: \"Percentage of users this release should be immediately available to\", type: \"string\" })\n            .option(\"privateKeyPath\", { alias: \"k\", default: false, demand: false, description: \"Specifies the location of a RSA private key to sign the release with\", type: \"string\" })\n            .option(\"sourcemapOutput\", { alias: \"s\", default: null, demand: false, description: \"Path to where the sourcemap for the resulting bundle should be written. If omitted, a sourcemap will not be generated.\", type: \"string\" })\n            .option(\"targetBinaryVersion\", { alias: \"t\", default: null, demand: false, description: \"Semver expression that specifies the binary app version(s) this release is targeting (e.g. 1.1.0, ~1.2.3). If omitted, the release will target the exact version specified in the \\\"Info.plist\\\" (iOS), \\\"build.gradle\\\" (Android) or \\\"Package.appxmanifest\\\" (Windows) files.\", type: \"string\" })\n            .option(\"outputDir\", { alias: \"o\", default: null, demand: false, description: \"Path to where the bundle and sourcemap should be written. If omitted, a bundle and sourcemap will not be written.\", type: \"string\" })\n            .option(\"config\", { alias: \"c\", default: null, demand: false, description: \"Path to the React Native CLI configuration file\", type: \"string\" })    \n            .check((argv: any, aliases: { [aliases: string]: string }): any => { return checkValidReleaseOptions(argv); });\n\n        addCommonConfiguration(yargs);\n    })\n    .command(\"rollback\", \"Rollback the latest release for an app deployment\", (yargs: yargs.Argv) => {\n        yargs.usage(USAGE_PREFIX + \" rollback <appName> <deploymentName> [options]\")\n            .demand(/*count*/ 2, /*max*/ 2)  // Require exactly two non-option arguments\n            .example(\"rollback MyApp Production\", \"Performs a rollback on the \\\"Production\\\" deployment of \\\"MyApp\\\"\")\n            .example(\"rollback MyApp Production --targetRelease v4\", \"Performs a rollback on the \\\"Production\\\" deployment of \\\"MyApp\\\" to the v4 release\")\n            .option(\"targetRelease\", { alias: \"r\", default: null, demand: false, description: \"Label of the release to roll the specified deployment back to (e.g. v4). If omitted, the deployment will roll back to the previous release.\", type: \"string\" });\n\n        addCommonConfiguration(yargs);\n    })\n    /*\n    .command(\"session\", \"View and manage the current login sessions associated with your account\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        yargs.usage(USAGE_PREFIX + \" session <command>\")\n            .demand(2, 2)  // Require exactly two non-option arguments.\n            .command(\"remove\", \"Remove an existing login session\", (yargs: yargs.Argv) => sessionRemove(\"remove\", yargs))\n            .command(\"rm\", \"Remove an existing login session\", (yargs: yargs.Argv) => sessionRemove(\"rm\", yargs))\n            .command(\"list\", \"List the current login sessions associated with your account\", (yargs: yargs.Argv) => sessionList(\"list\", yargs))\n            .command(\"ls\", \"List the current login sessions associated with your account\", (yargs: yargs.Argv) => sessionList(\"ls\", yargs))\n            .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommand);  // Report unrecognized, non-hyphenated command category.\n\n        addCommonConfiguration(yargs);\n    })\n    */\n    .command(\"whoami\", \"Display the account info for the current login session\", (yargs: yargs.Argv) => {\n        isValidCommandCategory = true;\n        isValidCommand = true;\n        yargs.usage(USAGE_PREFIX + \" whoami\")\n            .demand(/*count*/ 0, /*max*/ 0)  \n            .example(\"whoami\", \"Display the account info for the current login session\");\n        addCommonConfiguration(yargs);\n    })\n    .alias(\"v\", \"version\")\n    .version(packageJson.version)\n    .wrap(/*columnLimit*/ null)\n    .strict()  // Validate hyphenated (named) arguments.\n    .check((argv: any, aliases: { [aliases: string]: string }): any => isValidCommandCategory)  // Report unrecognized, non-hyphenated command category.\n    .fail((msg: string) => showHelp(/*showRootDescription*/ true))  // Suppress the default error message.\n    .argv;\n\nfunction createCommand(): cli.ICommand {\n    var cmd: cli.ICommand;\n\n    if (!wasHelpShown && argv._ && argv._.length > 0) {\n        // Create a command object\n        var arg0: any = argv._[0];\n        var arg1: any = argv._[1];\n        var arg2: any = argv._[2];\n        var arg3: any = argv._[3];\n        var arg4: any = argv._[4];\n\n        switch (arg0) {\n            case \"access-key\":\n                switch (arg1) {\n                    case \"add\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.accessKeyAdd };\n                            var accessKeyAddCmd = <cli.IAccessKeyAddCommand>cmd;\n                            accessKeyAddCmd.name = arg2;\n                            /*\n                            var ttlOption: string = argv[\"ttl\"];\n                            if (isDefined(ttlOption)) {\n                                accessKeyAddCmd.ttl = parseDurationMilliseconds(ttlOption);\n                            }\n                            */\n                            // Mobile Center access keys never expire, so this setting doesn't matter (it just needs to be something)\n                            accessKeyAddCmd.ttl = parseDurationMilliseconds(\"60d\");\n                        }\n                        break;\n\n                    case \"patch\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.accessKeyPatch };\n                            var accessKeyPatchCmd = <cli.IAccessKeyPatchCommand>cmd;\n                            accessKeyPatchCmd.oldName = arg2;\n\n                            var newNameOption: string = argv[\"name\"];\n                            var ttlOption: string = argv[\"ttl\"];\n                            if (isDefined(newNameOption)) {\n                                accessKeyPatchCmd.newName = newNameOption;\n                            }\n\n                            if (isDefined(ttlOption)) {\n                                accessKeyPatchCmd.ttl = parseDurationMilliseconds(ttlOption);\n                            }\n                        }\n                        break;\n\n                    case \"list\":\n                    case \"ls\":\n                        cmd = { type: cli.CommandType.accessKeyList };\n\n                        (<cli.IAccessKeyListCommand>cmd).format = argv[\"format\"];\n                        break;\n\n                    case \"remove\":\n                    case \"rm\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.accessKeyRemove };\n\n                            (<cli.IAccessKeyRemoveCommand>cmd).accessKey = arg2;\n                        }\n                        break;\n                }\n                break;\n\n            case \"app\":\n                switch (arg1) {\n                    case \"add\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.appAdd };\n\n                            var appAddCommand = <cli.IAppAddCommand>cmd;\n\n                            appAddCommand.appName = arg2;\n                            appAddCommand.os = arg3;\n                            appAddCommand.platform = arg4;\n                        }\n                        break;\n\n                    case \"list\":\n                    case \"ls\":\n                        cmd = { type: cli.CommandType.appList };\n\n                        (<cli.IAppListCommand>cmd).format = argv[\"format\"];\n                        break;\n\n                    case \"remove\":\n                    case \"rm\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.appRemove };\n\n                            (<cli.IAppRemoveCommand>cmd).appName = arg2;\n                        }\n                        break;\n\n                    case \"rename\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.appRename };\n\n                            var appRenameCommand = <cli.IAppRenameCommand>cmd;\n\n                            appRenameCommand.currentAppName = arg2;\n                            appRenameCommand.newAppName = arg3;\n                        }\n                        break;\n\n                    case \"transfer\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.appTransfer };\n\n                            var appTransferCommand = <cli.IAppTransferCommand>cmd;\n\n                            appTransferCommand.appName = arg2;\n                            appTransferCommand.email = arg3;\n                        }\n                        break;\n                }\n                break;\n\n            case \"collaborator\":\n                switch (arg1) {\n                    case \"add\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.collaboratorAdd };\n\n                            (<cli.ICollaboratorAddCommand>cmd).appName = arg2;\n                            (<cli.ICollaboratorAddCommand>cmd).email = arg3;\n                        }\n                        break;\n\n                    case \"list\":\n                    case \"ls\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.collaboratorList };\n\n                            (<cli.ICollaboratorListCommand>cmd).appName = arg2;\n                            (<cli.ICollaboratorListCommand>cmd).format = argv[\"format\"];\n                        }\n                        break;\n\n                    case \"remove\":\n                    case \"rm\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.collaboratorRemove };\n\n                            (<cli.ICollaboratorRemoveCommand>cmd).appName = arg2;\n                            (<cli.ICollaboratorAddCommand>cmd).email = arg3;\n                        }\n                        break;\n                }\n                break;\n\n\n            case \"debug\":\n                cmd = <cli.IDebugCommand>{\n                    type: cli.CommandType.debug,\n                    platform: arg1\n                };\n\n                break;\n\n            case \"deployment\":\n                switch (arg1) {\n                    case \"add\":\n                        if (arg2 && (arg3 || argv[\"default\"])) {\n                            cmd = { type: cli.CommandType.deploymentAdd };\n\n                            var deploymentAddCommand = <cli.IDeploymentAddCommand>cmd;\n\n                            deploymentAddCommand.appName = arg2;\n                            deploymentAddCommand.deploymentName = arg3;\n                            deploymentAddCommand.default = argv[\"default\"];\n                        }\n                        break;\n\n                    case \"clear\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.deploymentHistoryClear };\n\n                            var deploymentHistoryClearCommand = <cli.IDeploymentHistoryClearCommand>cmd;\n\n                            deploymentHistoryClearCommand.appName = arg2;\n                            deploymentHistoryClearCommand.deploymentName = arg3;\n                        }\n                        break;\n\n                    case \"list\":\n                    case \"ls\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.deploymentList };\n\n                            var deploymentListCommand = <cli.IDeploymentListCommand>cmd;\n\n                            deploymentListCommand.appName = arg2;\n                            deploymentListCommand.format = argv[\"format\"];\n                            deploymentListCommand.displayKeys = argv[\"displayKeys\"];\n                        }\n                        break;\n\n                    case \"remove\":\n                    case \"rm\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.deploymentRemove };\n\n                            var deploymentRemoveCommand = <cli.IDeploymentRemoveCommand>cmd;\n\n                            deploymentRemoveCommand.appName = arg2;\n                            deploymentRemoveCommand.deploymentName = arg3;\n                        }\n                        break;\n\n                    case \"rename\":\n                        if (arg2 && arg3 && arg4) {\n                            cmd = { type: cli.CommandType.deploymentRename };\n\n                            var deploymentRenameCommand = <cli.IDeploymentRenameCommand>cmd;\n\n                            deploymentRenameCommand.appName = arg2;\n                            deploymentRenameCommand.currentDeploymentName = arg3;\n                            deploymentRenameCommand.newDeploymentName = arg4;\n                        }\n                        break;\n\n                    case \"history\":\n                    case \"h\":\n                        if (arg2 && arg3) {\n                            cmd = { type: cli.CommandType.deploymentHistory };\n\n                            var deploymentHistoryCommand = <cli.IDeploymentHistoryCommand>cmd;\n\n                            deploymentHistoryCommand.appName = arg2;\n                            deploymentHistoryCommand.deploymentName = arg3;\n                            deploymentHistoryCommand.format = argv[\"format\"];\n                            deploymentHistoryCommand.displayAuthor = argv[\"displayAuthor\"];\n                        }\n                        break;\n                }\n                break;\n\n            case \"link\":\n                cmd = <cli.ILinkCommand>{ type: cli.CommandType.link, serverUrl: getServerUrl(arg1) };\n                break;\n\n            case \"login\":\n                cmd = { type: cli.CommandType.login };\n\n                var loginCommand = <cli.ILoginCommand>cmd;\n\n                loginCommand.serverUrl = getServerUrl(arg1);\n                loginCommand.accessKey = argv[\"accessKey\"];\n                loginCommand.proxy = argv[\"proxy\"];\n                loginCommand.noProxy = argv[\"noProxy\"];\n                break;\n\n            case \"logout\":\n                cmd = { type: cli.CommandType.logout };\n                break;\n\n            case \"patch\":\n                if (arg1 && arg2) {\n                    cmd = { type: cli.CommandType.patch };\n\n                    var patchCommand = <cli.IPatchCommand>cmd;\n\n                    patchCommand.appName = arg1;\n                    patchCommand.deploymentName = arg2;\n                    patchCommand.label = argv[\"label\"];\n                    // Description must be set to null to indicate that it is not being patched.\n                    patchCommand.description = argv[\"description\"] ? backslash(argv[\"description\"]) : null;\n                    patchCommand.disabled = argv[\"disabled\"];\n                    patchCommand.mandatory = argv[\"mandatory\"];\n                    patchCommand.rollout = getRolloutValue(argv[\"rollout\"]);\n                    patchCommand.appStoreVersion = argv[\"targetBinaryVersion\"];\n                }\n                break;\n\n            case \"promote\":\n                if (arg1 && arg2 && arg3) {\n                    cmd = { type: cli.CommandType.promote };\n\n                    var deploymentPromoteCommand = <cli.IPromoteCommand>cmd;\n\n                    deploymentPromoteCommand.appName = arg1;\n                    deploymentPromoteCommand.sourceDeploymentName = arg2;\n                    deploymentPromoteCommand.destDeploymentName = arg3;\n                    deploymentPromoteCommand.description = argv[\"description\"] ? backslash(argv[\"description\"]) : \"\";\n                    deploymentPromoteCommand.label = argv[\"label\"];\n                    deploymentPromoteCommand.disabled = argv[\"disabled\"];\n                    deploymentPromoteCommand.mandatory = argv[\"mandatory\"];\n                    deploymentPromoteCommand.noDuplicateReleaseError = argv[\"noDuplicateReleaseError\"];\n                    deploymentPromoteCommand.rollout = getRolloutValue(argv[\"rollout\"]);\n                    deploymentPromoteCommand.appStoreVersion = argv[\"targetBinaryVersion\"];\n                }\n                break;\n\n            case \"register\":\n                cmd = { type: cli.CommandType.register };\n\n                var registerCommand = <cli.IRegisterCommand>cmd;\n\n                registerCommand.serverUrl = getServerUrl(arg1);\n                registerCommand.proxy = argv[\"proxy\"];\n                registerCommand.noProxy = argv[\"noProxy\"];\n                break;\n\n            case \"release\":\n                if (arg1 && arg2 && arg3) {\n                    cmd = { type: cli.CommandType.release };\n\n                    var releaseCommand = <cli.IReleaseCommand>cmd;\n\n                    releaseCommand.appName = arg1;\n                    releaseCommand.package = arg2;\n                    releaseCommand.appStoreVersion = arg3;\n                    releaseCommand.deploymentName = argv[\"deploymentName\"];\n                    releaseCommand.description = argv[\"description\"] ? backslash(argv[\"description\"]) : \"\";\n                    releaseCommand.disabled = argv[\"disabled\"];\n                    releaseCommand.mandatory = argv[\"mandatory\"];\n                    releaseCommand.noDuplicateReleaseError = argv[\"noDuplicateReleaseError\"];\n                    releaseCommand.rollout = getRolloutValue(argv[\"rollout\"]);\n                    releaseCommand.privateKeyPath = argv[\"privateKeyPath\"];\n                }\n                break;\n\n            case \"release-cordova\":\n                if (arg1 && arg2) {\n                    cmd = { type: cli.CommandType.releaseCordova };\n\n                    var releaseCordovaCommand = <cli.IReleaseCordovaCommand>cmd;\n\n                    releaseCordovaCommand.appName = arg1;\n                    releaseCordovaCommand.platform = arg2;\n\n                    releaseCordovaCommand.build = argv[\"build\"];\n                    releaseCordovaCommand.deploymentName = argv[\"deploymentName\"];\n                    releaseCordovaCommand.description = argv[\"description\"] ? backslash(argv[\"description\"]) : \"\";\n                    releaseCordovaCommand.disabled = argv[\"disabled\"];\n                    releaseCordovaCommand.mandatory = argv[\"mandatory\"];\n                    releaseCordovaCommand.noDuplicateReleaseError = argv[\"noDuplicateReleaseError\"];\n                    releaseCordovaCommand.rollout = getRolloutValue(argv[\"rollout\"]);\n                    releaseCordovaCommand.appStoreVersion = argv[\"targetBinaryVersion\"];\n                    releaseCordovaCommand.isReleaseBuildType = argv[\"isReleaseBuildType\"];\n                    releaseCordovaCommand.privateKeyPath = argv[\"privateKeyPath\"];\n                }\n                break;\n\n            case \"release-react\":\n                if (arg1 && arg2) {\n                    cmd = { type: cli.CommandType.releaseReact };\n\n                    var releaseReactCommand = <cli.IReleaseReactCommand>cmd;\n\n                    releaseReactCommand.appName = arg1;\n                    releaseReactCommand.platform = arg2;\n\n                    releaseReactCommand.appStoreVersion = argv[\"targetBinaryVersion\"];\n                    releaseReactCommand.bundleName = argv[\"bundleName\"];\n                    releaseReactCommand.deploymentName = argv[\"deploymentName\"];\n                    releaseReactCommand.disabled = argv[\"disabled\"];\n                    releaseReactCommand.description = argv[\"description\"] ? backslash(argv[\"description\"]) : \"\";\n                    releaseReactCommand.development = argv[\"development\"];\n                    releaseReactCommand.entryFile = argv[\"entryFile\"];\n                    releaseReactCommand.gradleFile = argv[\"gradleFile\"];\n                    releaseReactCommand.mandatory = argv[\"mandatory\"];\n                    releaseReactCommand.noDuplicateReleaseError = argv[\"noDuplicateReleaseError\"];\n                    releaseReactCommand.plistFile = argv[\"plistFile\"];\n                    releaseReactCommand.plistFilePrefix = argv[\"plistFilePrefix\"];\n                    releaseReactCommand.rollout = getRolloutValue(argv[\"rollout\"]);\n                    releaseReactCommand.privateKeyPath = argv[\"privateKeyPath\"];\n                    releaseReactCommand.sourcemapOutput = argv[\"sourcemapOutput\"];\n                    releaseReactCommand.outputDir = argv[\"outputDir\"];\n                    releaseReactCommand.config = argv[\"config\"];\n                }\n                break;\n\n            case \"rollback\":\n                if (arg1 && arg2) {\n                    cmd = { type: cli.CommandType.rollback };\n\n                    var rollbackCommand = <cli.IRollbackCommand>cmd;\n\n                    rollbackCommand.appName = arg1;\n                    rollbackCommand.deploymentName = arg2;\n                    rollbackCommand.targetRelease = argv[\"targetRelease\"];\n                }\n                break;\n\n            case \"session\":\n                switch (arg1) {\n                    case \"list\":\n                    case \"ls\":\n                        cmd = { type: cli.CommandType.sessionList };\n\n                        (<cli.ISessionListCommand>cmd).format = argv[\"format\"];\n                        break;\n\n                    case \"remove\":\n                    case \"rm\":\n                        if (arg2) {\n                            cmd = { type: cli.CommandType.sessionRemove };\n\n                            (<cli.ISessionRemoveCommand>cmd).machineName = arg2;\n                        }\n                        break;\n                }\n                break;\n\n            case \"whoami\":\n                cmd = { type: cli.CommandType.whoami };\n                break;\n        }\n\n        return cmd;\n    }\n}\n\nfunction isValidRollout(args: any): boolean {\n    var rollout: string = args[\"rollout\"];\n    if (rollout && !ROLLOUT_PERCENTAGE_REGEX.test(rollout)) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction checkValidReleaseOptions(args: any): boolean {\n    return isValidRollout(args) && !!args[\"deploymentName\"];\n}\n\nfunction getRolloutValue(input: string): number {\n    return input ? parseInt(input.replace(\"%\", \"\")) : null;\n}\n\nfunction getServerUrl(url: string): string {\n    if (!url) return null;\n\n    // Trim whitespace and a trailing slash (/) character.\n    url = url.trim();\n    if (url[url.length - 1] === \"/\") {\n        url = url.substring(0, url.length - 1);\n    }\n\n    url = url.replace(/^(https?):\\\\/, \"$1://\");     // Replace 'http(s):\\' with 'http(s)://' for Windows Git Bash\n\n    return url;\n}\n\nfunction isDefined(object: any): boolean {\n    return object !== undefined && object !== null;\n}\n\nfunction parseDurationMilliseconds(durationString: string): number {\n    return Math.floor(parseDuration(durationString));\n}\n\nexport var command = createCommand();\n"],"sourceRoot":"../.."}